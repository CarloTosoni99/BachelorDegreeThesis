{"ast":null,"code":"var _jsxFileName = \"/home/carlo/Desktop/Project/my-solid-blog-test/src/components/ArticlesList.js\",\n    _s = $RefreshSig$();\n\nimport { saveSolidDatasetAt, getSolidDataset, getSourceUrl, getUrl, removeThing, getThing, getThingAll, setThing, createThing, addDatetime, addStringNoLocale, setStringNoLocale, getStringNoLocale, getDatetime } from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\nimport WriteArticles from './WriteArticles.js';\nimport Article from './Article.js';\nimport { schema, rdf, solid } from 'rdf-namespaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Articlelist(props) {\n  _s();\n\n  const {\n    session\n  } = useSession();\n  const [articlelist, setArticlelist] = useState();\n  const [webIdArray, setWebIdArray] = useState(['https://aliceunipg.inrupt.net/profile/card#me', 'https://bobunipg.inrupt.net/profile/card#me']);\n  console.log(webIdArray);\n  const webId = session.info.webId ? session.info.webId : \"\"; //eliminate later\n\n  const iriProperty = \"http://www.w3.org/ns/auth/acl#trustedApp\"; //until here\n\n  useEffect(() => {\n    console.log(\"inizio\");\n    let isComponentMounted = true;\n\n    const fetchDataset = async () => {\n      console.log(\"entrata prima del for\");\n\n      for (let x = 0; x < webIdArray.length; x++) {\n        console.log(\"entrata: \" + x);\n\n        try {\n          const myDataset = await getSolidDataset(webId, {\n            fetch: session.fetch\n          });\n          const profile = getThing(myDataset, webId);\n          const publicTypeIndexUrl = getUrl(profile, solid.publicTypeIndex);\n          const podUrl = getUrl(profile, \"http://www.w3.org/ns/pim/space#storage\");\n          const containerUrl = podUrl + \"public/my-solid-blog/\";\n          const list = await getOrCreateDataset(containerUrl, session.fetch, publicTypeIndexUrl);\n          console.log(\"Stampa qui\");\n\n          if (isComponentMounted) {\n            if (articlelist !== null) {\n              setArticlelist(articlelist.concat(list));\n            } else {\n              setArticlelist(list);\n            }\n\n            console.log(articlelist);\n          }\n        } catch (e) {\n          console.log(\"an error occurr\");\n          console.log(e);\n        }\n      }\n    };\n\n    fetchDataset();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [session], webId);\n\n  const addArticle = async (articleTitle, articleText) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const thingWithType = addStringNoLocale(createThing(), rdf.type, schema.TextDigitalDocument);\n    const thingWithTitle = addStringNoLocale(thingWithType, schema.headline, articleTitle);\n    const thingWithDate = addDatetime(thingWithTitle, schema.dateCreated, new Date());\n    const thingWithText = addStringNoLocale(thingWithDate, schema.text, articleText);\n    const updatedArticlelist = setThing(articlelist, thingWithText);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const removeArticle = async thing => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const updatedArticlelist = removeThing(articlelist, thing);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const changeArticle = async (thing, text, headline) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const articleText = setStringNoLocale(thing, schema.text, text);\n    const articleHeadline = setStringNoLocale(articleText, schema.headline, headline);\n    const updatedArticlelist = setThing(articlelist, articleHeadline);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const articlesArray = articlelist ? getThingAll(articlelist) : [];\n  const myArticles = articlesArray.sort(byDate).map(currentValue => {\n    const title = getStringNoLocale(currentValue, schema.headline);\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(Article, {\n        thing: currentValue,\n        remove: async thing => await removeArticle(thing),\n        change: async (thing, text, headline) => await changeArticle(thing, text, headline),\n        isLogged: props.isLogged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [\"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-half\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: myArticles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-one-quarter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"You can use TrustApp in order to undestand if the permissions are still valid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"This application is a part of a project.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), props.isLogged ? /*#__PURE__*/_jsxDEV(WriteArticles, {\n      newArticle: (title, text) => addArticle(title, text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You must be autenthicated to write new articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Articlelist, \"cCcEiDg1iLjGj5J94e8N8pN2YJw=\", false, function () {\n  return [useSession];\n});\n\n_c = Articlelist;\nexport default Articlelist;\n\nfunction byDate(a, b) {\n  const aUpdateDate = getDatetime(a, schema.dateModified);\n  const bUpdateDate = getDatetime(b, schema.dateModified);\n  const aCreatedDate = getDatetime(a, schema.dateCreated);\n  const bCreatedDate = getDatetime(b, schema.dateCreated);\n  const aDate = aUpdateDate !== null && aUpdateDate !== void 0 ? aUpdateDate : aCreatedDate;\n  const bDate = bUpdateDate !== null && bUpdateDate !== void 0 ? bUpdateDate : bCreatedDate;\n\n  if (bDate === null) {\n    return -1;\n  }\n\n  if (aDate === null) {\n    return 1;\n  }\n\n  return bDate.getTime() - aDate.getTime();\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Articlelist\");","map":{"version":3,"sources":["/home/carlo/Desktop/Project/my-solid-blog-test/src/components/ArticlesList.js"],"names":["saveSolidDatasetAt","getSolidDataset","getSourceUrl","getUrl","removeThing","getThing","getThingAll","setThing","createThing","addDatetime","addStringNoLocale","setStringNoLocale","getStringNoLocale","getDatetime","useSession","React","useEffect","useState","getOrCreateDataset","WriteArticles","Article","schema","rdf","solid","Articlelist","props","session","articlelist","setArticlelist","webIdArray","setWebIdArray","console","log","webId","info","iriProperty","isComponentMounted","fetchDataset","x","length","myDataset","fetch","profile","publicTypeIndexUrl","publicTypeIndex","podUrl","containerUrl","list","concat","e","addArticle","articleTitle","articleText","articlelistUrl","thingWithType","type","TextDigitalDocument","thingWithTitle","headline","thingWithDate","dateCreated","Date","thingWithText","text","updatedArticlelist","savedUpdatedArticlelist","removeArticle","thing","changeArticle","articleHeadline","articlesArray","myArticles","sort","byDate","map","currentValue","title","isLogged","a","b","aUpdateDate","dateModified","bUpdateDate","aCreatedDate","bCreatedDate","aDate","bDate","getTime"],"mappings":"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","sourcesContent":["import { \n    saveSolidDatasetAt,\n    getSolidDataset,\n    getSourceUrl,\n    getUrl,\n    removeThing,\n    getThing,\n    getThingAll,\n    setThing,\n    createThing,\n    addDatetime,\n    addStringNoLocale,\n    setStringNoLocale,\n    getStringNoLocale,\n    getDatetime,\n  } from \"@inrupt/solid-client\";\n  import { useSession } from \"@inrupt/solid-ui-react\";\n  import React, { useEffect, useState } from \"react\";\n  import { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\n  import WriteArticles from './WriteArticles.js';\n  import Article from './Article.js';\n  import { schema, rdf, solid } from 'rdf-namespaces';\n\n  \n  function Articlelist(props) {\n    const { session } = useSession();\n    const [articlelist, setArticlelist] = useState();\n    const [webIdArray, setWebIdArray] = useState(['https://aliceunipg.inrupt.net/profile/card#me', 'https://bobunipg.inrupt.net/profile/card#me'])\n\n    console.log(webIdArray);\n    const webId = session.info.webId ? session.info.webId : \"\";\n    //eliminate later\n    const iriProperty = \"http://www.w3.org/ns/auth/acl#trustedApp\";\n    //until here\n\n    useEffect(() => {\n      console.log(\"inizio\");\n      let isComponentMounted = true;\n      \n      const fetchDataset = async () => {\n        console.log(\"entrata prima del for\");\n        for (let x = 0; x < webIdArray.length; x++) {\n          console.log(\"entrata: \" + x);\n          try {\n            const myDataset = await getSolidDataset(\n              webId,\n              {\n              fetch: session.fetch,\n              },\n            );\n            const profile = getThing(\n              myDataset,\n              webId,\n            );\n\n            const publicTypeIndexUrl = getUrl( profile, solid.publicTypeIndex );\n\n            const podUrl = getUrl(\n              profile,\n              \"http://www.w3.org/ns/pim/space#storage\",\n            );\n            const containerUrl = podUrl + \"public/my-solid-blog/\";\n            const list = await getOrCreateDataset(\n              containerUrl,\n              session.fetch,\n              publicTypeIndexUrl,\n            );\n\n            console.log(\"Stampa qui\");\n\n            if (isComponentMounted) {\n              if ( articlelist !== null ) {\n                setArticlelist(articlelist.concat(list));\n              }\n              else {\n                setArticlelist(list);\n              }\n              console.log(articlelist);\n            }\n          }\n          catch(e) {\n            console.log(\"an error occurr\");\n            console.log(e);\n          }\n        }\n      };\n      \n      fetchDataset();\n      \n      return () => {\n        isComponentMounted = false;\n      }\n    }, [session], webId);\n    \n\n    const addArticle = async (articleTitle, articleText) => {\n      const articlelistUrl = getSourceUrl(articlelist);\n\n      const thingWithType = addStringNoLocale(\n        createThing(),\n        rdf.type,\n        schema.TextDigitalDocument,\n      );\n      const thingWithTitle = addStringNoLocale(\n        thingWithType,\n        schema.headline,\n        articleTitle,\n      );\n      const thingWithDate = addDatetime(\n        thingWithTitle,\n        schema.dateCreated,\n        new Date(),\n      );\n      const thingWithText = addStringNoLocale(\n        thingWithDate,\n        schema.text,\n        articleText,\n      );\n      const updatedArticlelist = setThing(\n        articlelist,\n        thingWithText,\n      );\n      \n      const savedUpdatedArticlelist = await saveSolidDatasetAt(\n        articlelistUrl,\n        updatedArticlelist,\n        {fetch: session.fetch},\n      );\n      setArticlelist(savedUpdatedArticlelist);\n    };\n    \n    const removeArticle = async (thing) => {\n      const articlelistUrl = getSourceUrl(articlelist);\n      const updatedArticlelist = removeThing(\n        articlelist,\n        thing,\n      );\n      const savedUpdatedArticlelist = await saveSolidDatasetAt(\n        articlelistUrl,\n        updatedArticlelist,\n        {fetch: session.fetch},\n      );\n      setArticlelist(savedUpdatedArticlelist);\n    }\n    \n    const changeArticle = async (thing, text, headline) => {\n      const articlelistUrl = getSourceUrl(articlelist);\n      const articleText = setStringNoLocale(\n        thing,\n        schema.text,\n        text,\n      );\n      const articleHeadline = setStringNoLocale(\n        articleText,\n        schema.headline,\n        headline,\n      );\n      const updatedArticlelist = setThing(\n        articlelist,\n        articleHeadline,\n      );\n      const savedUpdatedArticlelist = await saveSolidDatasetAt(\n        articlelistUrl,\n        updatedArticlelist,\n        {fetch: session.fetch},\n      );\n      setArticlelist(savedUpdatedArticlelist);\n    };\n    \n    const articlesArray = articlelist ? getThingAll(articlelist) : [];  \n    const myArticles = articlesArray.sort(byDate).map((currentValue) => {\n      const title = getStringNoLocale(\n        currentValue,\n        schema.headline,\n      );\n      \n      return(\n        <li key={title} className=\"columns\">\n          <Article\n            thing={currentValue}\n            remove={async (thing) => await removeArticle(thing)}\n            change={async (thing, text, headline) => await changeArticle(thing, text, headline)}\n            isLogged={props.isLogged}\n          />\n        </li>\n      );\n    });\n    \n    return(\n      <>\n        <br/>\n        <div className=\"columns\">\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <div className=\"column is-half\">\n          <ul>{myArticles}</ul>\n          </div>\n          <div className=\"column is-one-quarter\">\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <div className=\"content\">\n                  You can use TrustApp in order to undestand if the permissions are still valid.\n                </div>\n                <br/>\n                <div className=\"content\">\n                  This application is a part of a project.\n                </div>\n                <br/>\n              </div>\n            </div>\n          </div>\n        </div>\n        <br/>\n        <br/>\n        {props.isLogged ? (\n          <WriteArticles\n            newArticle={(title, text) => addArticle(title, text)}\n          />\n        ) : (\n          <p>You must be autenthicated to write new articles</p>\n        )}\n      </>\n    );\n  }\n  \n  export default Articlelist;\n  \n  \n  function byDate(a, b) {\n    const aUpdateDate = getDatetime(a, schema.dateModified);\n    const bUpdateDate = getDatetime(b, schema.dateModified);\n      \n    const aCreatedDate = getDatetime(a, schema.dateCreated);\n    const bCreatedDate = getDatetime(b, schema.dateCreated);\n    \n    const aDate = aUpdateDate ?? aCreatedDate;\n    const bDate = bUpdateDate ?? bCreatedDate;\n    \n    if (bDate === null) {\n      return -1;\n    }\n    \n    if (aDate === null) {\n      return 1;\n    }\n    \n    return bDate.getTime() - aDate.getTime();\n  }"]},"metadata":{},"sourceType":"module"}