{"ast":null,"code":"import { createSolidDataset, getSolidDataset, saveSolidDatasetAt, createThing, getThing, addUrl, getSourceUrl, getUrl, setThing } from \"@inrupt/solid-client\";\nimport { solid, rdf, schema } from 'rdf-namespaces';\nexport async function getOrCreateDataset(containerUri, fetch, publicTypeIndexUri) {\n  const publicTypeIndex = await getSolidDataset(publicTypeIndexUri);\n  const articleListThing = getThing(publicTypeIndex, \"https://carlotosoni99.inrupt.net/settings/publicTypeIndex.ttl#articlelist\");\n\n  if (articleListThing === null) {\n    try {\n      const articlelistUri = containerUri + \"articlelist.ttl\";\n      return await initialiseArticlelist(articlelistUri, fetch, publicTypeIndex, publicTypeIndexUri);\n    } catch (e) {\n      console.log(\"an error occurr\");\n      console.log(e);\n    }\n  }\n\n  const articlelistUri = getUrl(articleListThing, solid.instance);\n  return await getSolidDataset(articlelistUri);\n}\n\nasync function initialiseArticlelist(articlelistUri, fetch, publicTypeIndex, publicTypeIndexUri) {\n  const listPublicType = getThing(publicTypeIndex, publicTypeIndexUri);\n  const listPublicTypeWithRef = addUrl(listPublicType, \"http://purl.org/dc/terms/references\", articlelistUri);\n  const uploadedPublicTypeIndexRef = setThing(publicTypeIndex, listPublicTypeWithRef);\n  const newPublicTypeIndex = await saveSolidDatasetAt(publicTypeIndexUri, uploadedPublicTypeIndexRef, {\n    fetch: fetch\n  });\n  const articlelistDataset = await saveSolidDatasetAt(articlelistUri, createSolidDataset(), {\n    fetch: fetch\n  });\n  const newPublicThing = createThing({\n    url: \"https://carlotosoni99.inrupt.net/settings/publicTypeIndex.ttl#articlelist\"\n  });\n  const thingWithType = addUrl(newPublicThing, rdf.type, solid.TypeRegistration);\n  const thingWithForClass = addUrl(thingWithType, solid.forClass, schema.TextDigitalDocument);\n  const thingWithInstance = addUrl(thingWithForClass, solid.instance, getSourceUrl(articlelistDataset));\n  const uploadedPublicTypeIndex = setThing(newPublicTypeIndex, thingWithInstance);\n  await saveSolidDatasetAt(publicTypeIndexUri, uploadedPublicTypeIndex, {\n    fetch: fetch\n  });\n  return articlelistDataset;\n}","map":{"version":3,"sources":["/home/carlo/Desktop/Thesis/my-solid-blog/src/utils/GetOrCreateDataset.js"],"names":["createSolidDataset","getSolidDataset","saveSolidDatasetAt","createThing","getThing","addUrl","getSourceUrl","getUrl","setThing","solid","rdf","schema","getOrCreateDataset","containerUri","fetch","publicTypeIndexUri","publicTypeIndex","articleListThing","articlelistUri","initialiseArticlelist","e","console","log","instance","listPublicType","listPublicTypeWithRef","uploadedPublicTypeIndexRef","newPublicTypeIndex","articlelistDataset","newPublicThing","url","thingWithType","type","TypeRegistration","thingWithForClass","forClass","TextDigitalDocument","thingWithInstance","uploadedPublicTypeIndex"],"mappings":"AAAA,SACEA,kBADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,YAPF,EAQEC,MARF,EASEC,QATF,QAUO,sBAVP;AAYA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,MAArB,QAAmC,gBAAnC;AAGA,OAAO,eAAeC,kBAAf,CAAkCC,YAAlC,EAAgDC,KAAhD,EAAuDC,kBAAvD,EAA2E;AAEhF,QAAMC,eAAe,GAAG,MAAMf,eAAe,CAACc,kBAAD,CAA7C;AAEA,QAAME,gBAAgB,GAAGb,QAAQ,CAACY,eAAD,EAAkB,2EAAlB,CAAjC;;AAEA,MAAKC,gBAAgB,KAAK,IAA1B,EAAiC;AAC/B,QAAG;AACD,YAAMC,cAAc,GAAGL,YAAY,GAAG,iBAAtC;AACA,aAAO,MAAMM,qBAAqB,CAACD,cAAD,EAAiBJ,KAAjB,EAAwBE,eAAxB,EAAyCD,kBAAzC,CAAlC;AACD,KAHD,CAIA,OAAMK,CAAN,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAED,QAAMF,cAAc,GAAGX,MAAM,CAACU,gBAAD,EAAmBR,KAAK,CAACc,QAAzB,CAA7B;AAEA,SAAO,MAAMtB,eAAe,CAACiB,cAAD,CAA5B;AACD;;AAGD,eAAeC,qBAAf,CAAsCD,cAAtC,EAAsDJ,KAAtD,EAA6DE,eAA7D,EAA8ED,kBAA9E,EAAkG;AAEhG,QAAMS,cAAc,GAAGpB,QAAQ,CAC7BY,eAD6B,EAE7BD,kBAF6B,CAA/B;AAKA,QAAMU,qBAAqB,GAAGpB,MAAM,CAClCmB,cADkC,EAElC,qCAFkC,EAGlCN,cAHkC,CAApC;AAMA,QAAMQ,0BAA0B,GAAGlB,QAAQ,CACzCQ,eADyC,EAEzCS,qBAFyC,CAA3C;AAKA,QAAME,kBAAkB,GAAG,MAAMzB,kBAAkB,CACjDa,kBADiD,EAEjDW,0BAFiD,EAGjD;AACEZ,IAAAA,KAAK,EAAEA;AADT,GAHiD,CAAnD;AAQA,QAAMc,kBAAkB,GAAG,MAAM1B,kBAAkB,CACjDgB,cADiD,EAEjDlB,kBAAkB,EAF+B,EAGjD;AACAc,IAAAA,KAAK,EAAEA;AADP,GAHiD,CAAnD;AAQA,QAAMe,cAAc,GAAG1B,WAAW,CAAC;AAAC2B,IAAAA,GAAG,EAAE;AAAN,GAAD,CAAlC;AAEA,QAAMC,aAAa,GAAG1B,MAAM,CAC1BwB,cAD0B,EAE1BnB,GAAG,CAACsB,IAFsB,EAG1BvB,KAAK,CAACwB,gBAHoB,CAA5B;AAMA,QAAMC,iBAAiB,GAAG7B,MAAM,CAC9B0B,aAD8B,EAE9BtB,KAAK,CAAC0B,QAFwB,EAG9BxB,MAAM,CAACyB,mBAHuB,CAAhC;AAMA,QAAMC,iBAAiB,GAAGhC,MAAM,CAC9B6B,iBAD8B,EAE9BzB,KAAK,CAACc,QAFwB,EAG9BjB,YAAY,CAACsB,kBAAD,CAHkB,CAAhC;AAMA,QAAMU,uBAAuB,GAAG9B,QAAQ,CACtCmB,kBADsC,EAEtCU,iBAFsC,CAAxC;AAKA,QAAMnC,kBAAkB,CACtBa,kBADsB,EAEtBuB,uBAFsB,EAGtB;AACExB,IAAAA,KAAK,EAAEA;AADT,GAHsB,CAAxB;AAQA,SAAOc,kBAAP;AACD","sourcesContent":["import {\n  createSolidDataset,\n  getSolidDataset,\n  saveSolidDatasetAt,\n  createThing,\n  getThing,\n  addUrl,\n  getSourceUrl,\n  getUrl,\n  setThing,\n} from \"@inrupt/solid-client\";\n\nimport { solid, rdf, schema } from 'rdf-namespaces';\n\n\nexport async function getOrCreateDataset(containerUri, fetch, publicTypeIndexUri) {\n\n  const publicTypeIndex = await getSolidDataset(publicTypeIndexUri);\n\n  const articleListThing = getThing(publicTypeIndex, \"https://carlotosoni99.inrupt.net/settings/publicTypeIndex.ttl#articlelist\");\n\n  if ( articleListThing === null ) {\n    try{\n      const articlelistUri = containerUri + \"articlelist.ttl\";\n      return await initialiseArticlelist(articlelistUri, fetch, publicTypeIndex, publicTypeIndexUri);\n    }\n    catch(e) {\n      console.log(\"an error occurr\")\n      console.log(e);\n    }\n  }\n\n  const articlelistUri = getUrl(articleListThing, solid.instance);\n\n  return await getSolidDataset(articlelistUri);\n}\n\n\nasync function initialiseArticlelist (articlelistUri, fetch, publicTypeIndex, publicTypeIndexUri) {\n\n  const listPublicType = getThing(\n    publicTypeIndex,\n    publicTypeIndexUri,\n  );\n\n  const listPublicTypeWithRef = addUrl(\n    listPublicType,\n    \"http://purl.org/dc/terms/references\",\n    articlelistUri,\n  );\n\n  const uploadedPublicTypeIndexRef = setThing(\n    publicTypeIndex,\n    listPublicTypeWithRef,\n  );\n\n  const newPublicTypeIndex = await saveSolidDatasetAt(\n    publicTypeIndexUri,\n    uploadedPublicTypeIndexRef,\n    {\n      fetch: fetch,\n    },\n  )\n\n  const articlelistDataset = await saveSolidDatasetAt(\n    articlelistUri,\n    createSolidDataset(),\n    {\n    fetch: fetch,\n    },\n  );\n\n  const newPublicThing = createThing({url: \"https://carlotosoni99.inrupt.net/settings/publicTypeIndex.ttl#articlelist\"});\n\n  const thingWithType = addUrl(\n    newPublicThing,\n    rdf.type,\n    solid.TypeRegistration,\n  );\n\n  const thingWithForClass = addUrl(\n    thingWithType,\n    solid.forClass,\n    schema.TextDigitalDocument\n  );\n\n  const thingWithInstance = addUrl(\n    thingWithForClass,\n    solid.instance,\n    getSourceUrl(articlelistDataset),\n  );\n\n  const uploadedPublicTypeIndex = setThing(\n    newPublicTypeIndex,\n    thingWithInstance,\n  );\n\n  await saveSolidDatasetAt(\n    publicTypeIndexUri,\n    uploadedPublicTypeIndex,\n    {\n      fetch: fetch,\n    },  \n  );\n\n  return articlelistDataset;\n}"]},"metadata":{},"sourceType":"module"}