{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mockStorageUtility = exports.mockStorage = exports.StorageUtilityMock = exports.StorageUtilityGetResponse = void 0;\n\nconst __1 = require(\"../..\");\n\nexports.StorageUtilityGetResponse = \"getResponse\";\nexports.StorageUtilityMock = {\n  get: async (key, options) => exports.StorageUtilityGetResponse,\n  set: async (key, value) => {},\n  delete: async key => {},\n  getForUser: async (userId, key, options) => exports.StorageUtilityGetResponse,\n  setForUser: async (userId, values, options) => {},\n  deleteForUser: async (userId, key, options) => {},\n  deleteAllUserData: async (userId, options) => {},\n  storeResourceServerSessionInfo: async (_webId, _resourceServerIri, _sessionExpires) => {},\n  clearResourceServerSessionInfo: async _resourceServerIri => {}\n};\n\nconst mockStorage = stored => {\n  const store = stored;\n  return {\n    get: async key => {\n      if (store[key] === undefined) {\n        return undefined;\n      }\n\n      if (typeof store[key] === \"string\") {\n        return store[key];\n      }\n\n      return JSON.stringify(store[key]);\n    },\n    set: async (key, value) => {\n      store[key] = value;\n    },\n    delete: async key => {\n      delete store[key];\n    }\n  };\n};\n\nexports.mockStorage = mockStorage;\n\nconst mockStorageUtility = (stored, isSecure = false) => {\n  if (isSecure) {\n    return new __1.StorageUtility(exports.mockStorage(stored), exports.mockStorage({}));\n  }\n\n  return new __1.StorageUtility(exports.mockStorage({}), exports.mockStorage(stored));\n};\n\nexports.mockStorageUtility = mockStorageUtility;","map":{"version":3,"sources":["../../../src/storage/__mocks__/StorageUtility.ts"],"names":[],"mappings":";;;;;;;AAqBA,MAAA,GAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAGa,OAAA,CAAA,yBAAA,GAA4B,aAA5B;AAEA,OAAA,CAAA,kBAAA,GAAsC;AAEjD,EAAA,GAAG,EAAE,OAAO,GAAP,EAAoB,OAApB,KACH,OAAA,CAAA,yBAH+C;AAIjD,EAAA,GAAG,EAAE,OAAO,GAAP,EAAoB,KAApB,KAAqC,CAEzC,CANgD;AAOjD,EAAA,MAAM,EAAE,MAAO,GAAP,IAAsB,CAE7B,CATgD;AAUjD,EAAA,UAAU,EAAE,OACV,MADU,EAEV,GAFU,EAGV,OAHU,KAIP,OAAA,CAAA,yBAd4C;AAejD,EAAA,UAAU,EAAE,OACV,MADU,EAEV,MAFU,EAGV,OAHU,KAIR,CAEH,CArBgD;AAsBjD,EAAA,aAAa,EAAE,OACb,MADa,EAEb,GAFa,EAGb,OAHa,KAIX,CAEH,CA5BgD;AA6BjD,EAAA,iBAAiB,EAAE,OAAO,MAAP,EAAuB,OAAvB,KAAyD,CAE3E,CA/BgD;AAiCjD,EAAA,8BAA8B,EAAE,OAC9B,MAD8B,EAE9B,kBAF8B,EAG9B,eAH8B,KAIb,CAElB,CAvCgD;AAwCjD,EAAA,8BAA8B,EAAE,MAC9B,kBAD8B,IAEb,CAElB;AA5CgD,CAAtC;;AA+CN,MAAM,WAAW,GACtB,MADyB,IAEb;AACZ,QAAM,KAAK,GAAG,MAAd;AACA,SAAO;AACL,IAAA,GAAG,EAAE,MAAO,GAAP,IAAmD;AACtD,UAAI,KAAK,CAAC,GAAD,CAAL,KAAe,SAAnB,EAA8B;AAC5B,eAAO,SAAP;AACD;;AACD,UAAI,OAAO,KAAK,CAAC,GAAD,CAAZ,KAAsB,QAA1B,EAAoC;AAClC,eAAO,KAAK,CAAC,GAAD,CAAZ;AACD;;AACD,aAAO,IAAI,CAAC,SAAL,CAAe,KAAK,CAAC,GAAD,CAApB,CAAP;AACD,KATI;AAUL,IAAA,GAAG,EAAE,OAAO,GAAP,EAAoB,KAApB,KAAoD;AACvD,MAAA,KAAK,CAAC,GAAD,CAAL,GAAa,KAAb;AACD,KAZI;AAaL,IAAA,MAAM,EAAE,MAAO,GAAP,IAAqC;AAC3C,aAAO,KAAK,CAAC,GAAD,CAAZ;AACD;AAfI,GAAP;AAiBD,CArBM;;AAAM,OAAA,CAAA,WAAA,GAAW,WAAX;;AAuBN,MAAM,kBAAkB,GAAG,CAChC,MADgC,EAEhC,QAAQ,GAAG,KAFqB,KAGb;AACnB,MAAI,QAAJ,EAAc;AACZ,WAAO,IAAI,GAAA,CAAA,cAAJ,CAAmB,OAAA,CAAA,WAAA,CAAY,MAAZ,CAAnB,EAAwC,OAAA,CAAA,WAAA,CAAY,EAAZ,CAAxC,CAAP;AACD;;AACD,SAAO,IAAI,GAAA,CAAA,cAAJ,CAAmB,OAAA,CAAA,WAAA,CAAY,EAAZ,CAAnB,EAAoC,OAAA,CAAA,WAAA,CAAY,MAAZ,CAApC,CAAP;AACD,CARM;;AAAM,OAAA,CAAA,kBAAA,GAAkB,kBAAlB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mockStorageUtility = exports.mockStorage = exports.StorageUtilityMock = exports.StorageUtilityGetResponse = void 0;\nconst __1 = require(\"../..\");\nexports.StorageUtilityGetResponse = \"getResponse\";\nexports.StorageUtilityMock = {\n    get: async (key, options) => exports.StorageUtilityGetResponse,\n    set: async (key, value) => {\n    },\n    delete: async (key) => {\n    },\n    getForUser: async (userId, key, options) => exports.StorageUtilityGetResponse,\n    setForUser: async (userId, values, options) => {\n    },\n    deleteForUser: async (userId, key, options) => {\n    },\n    deleteAllUserData: async (userId, options) => {\n    },\n    storeResourceServerSessionInfo: async (_webId, _resourceServerIri, _sessionExpires) => {\n    },\n    clearResourceServerSessionInfo: async (_resourceServerIri) => {\n    },\n};\nconst mockStorage = (stored) => {\n    const store = stored;\n    return {\n        get: async (key) => {\n            if (store[key] === undefined) {\n                return undefined;\n            }\n            if (typeof store[key] === \"string\") {\n                return store[key];\n            }\n            return JSON.stringify(store[key]);\n        },\n        set: async (key, value) => {\n            store[key] = value;\n        },\n        delete: async (key) => {\n            delete store[key];\n        },\n    };\n};\nexports.mockStorage = mockStorage;\nconst mockStorageUtility = (stored, isSecure = false) => {\n    if (isSecure) {\n        return new __1.StorageUtility(exports.mockStorage(stored), exports.mockStorage({}));\n    }\n    return new __1.StorageUtility(exports.mockStorage({}), exports.mockStorage(stored));\n};\nexports.mockStorageUtility = mockStorageUtility;\n//# sourceMappingURL=StorageUtility.js.map"]},"metadata":{},"sourceType":"script"}