{"ast":null,"code":"var _jsxFileName = \"/home/carlo/Desktop/Project/my-solid-blog/src/components/ArticlesList.js\",\n    _s = $RefreshSig$();\n\nimport { saveSolidDatasetAt, getSolidDataset, getSourceUrl, getUrl, removeThing, getThing, getThingAll, setThing, createThing, addDatetime, addDecimal, addStringNoLocale, setStringNoLocale, getDatetime, getDecimal } from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\nimport WriteArticles from './WriteArticles.js';\nimport Article from './Article.js';\nimport { schema, rdf, solid } from 'rdf-namespaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Articlelist(props) {\n  _s();\n\n  const {\n    session\n  } = useSession();\n  const [articlelist, setArticlelist] = useState();\n  const webId = session.info.webId ? session.info.webId : props.webId;\n  const identifier = Math.random();\n  useEffect(() => {\n    const fetchDataset = async () => {\n      try {\n        const myDataset = await getSolidDataset(webId, {\n          fetch: session.fetch\n        });\n        const profile = getThing(myDataset, webId);\n        const publicTypeIndexUrl = getUrl(profile, solid.publicTypeIndex);\n        const podUrl = getUrl(profile, \"http://www.w3.org/ns/pim/space#storage\");\n        const containerUrl = podUrl + \"public/my-solid-blog/articlelist.ttl\";\n        const list = await getOrCreateDataset(containerUrl, session.fetch, publicTypeIndexUrl);\n        setArticlelist(list);\n      } catch (e) {\n        console.log(\"an error occurr\");\n        console.log(e);\n      }\n    };\n\n    fetchDataset();\n  }, [session], webId);\n\n  const addArticle = async (articleTitle, articleText) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const thingWithType = addStringNoLocale(createThing(), rdf.type, schema.TextDigitalDocument);\n    const thingWithIdentifier = addDecimal(thingWithType, schema.identifier, identifier);\n    const thingWithTitle = addStringNoLocale(thingWithIdentifier, schema.headline, articleTitle);\n    const thingWithDate = addDatetime(thingWithTitle, schema.dateCreated, new Date());\n    const thingWithText = addStringNoLocale(thingWithDate, schema.text, articleText);\n    const updatedArticlelist = setThing(articlelist, thingWithText);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const removeArticle = async thing => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const updatedArticlelist = removeThing(articlelist, thing);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const changeArticle = async (thing, text, headline) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const articleText = setStringNoLocale(thing, schema.text, text);\n    const articleHeadline = setStringNoLocale(articleText, schema.headline, headline);\n    const updatedArticlelist = setThing(articlelist, articleHeadline);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const articlesArray = articlelist ? getThingAll(articlelist) : [];\n  const myArticles = articlesArray.sort(byDate).map(currentValue => {\n    const identifier = getDecimal(currentValue, schema.identifier);\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(Article, {\n        thing: currentValue,\n        remove: async thing => await removeArticle(thing),\n        change: async (thing, text, headline) => await changeArticle(thing, text, headline),\n        webId: props.webId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, identifier, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [\"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-half\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: myArticles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-one-quarter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification is-warning is-light\",\n              children: \"This application was created in order to demonstrate how a decentralized blog could work.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"All the data here displayed is saved in a remote Solid server, according to Solid technology.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"This technology, created by Sir Tim Berners-Lee, allows the users to control their data.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [\"If you want to have more information about this technology you can visit \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://solidproject.org/\",\n                children: \"https://solidproject.org/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 90\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"This application was developed for the thesis of Carlo Tosoni (a.a. 2020/2021), bachelor degree in computer engineering.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), session.info.isLoggedIn ? /*#__PURE__*/_jsxDEV(WriteArticles, {\n      newArticle: (title, text) => addArticle(title, text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n}\n\n_s(Articlelist, \"wE85eyWrrNBiIXXjHIweT6xtd6k=\", false, function () {\n  return [useSession];\n});\n\n_c = Articlelist;\nexport default Articlelist;\n\nfunction byDate(a, b) {\n  const aUpdateDate = getDatetime(a, schema.dateModified);\n  const bUpdateDate = getDatetime(b, schema.dateModified);\n  const aCreatedDate = getDatetime(a, schema.dateCreated);\n  const bCreatedDate = getDatetime(b, schema.dateCreated);\n  const aDate = aUpdateDate !== null && aUpdateDate !== void 0 ? aUpdateDate : aCreatedDate;\n  const bDate = bUpdateDate !== null && bUpdateDate !== void 0 ? bUpdateDate : bCreatedDate;\n\n  if (bDate === null) {\n    return -1;\n  }\n\n  if (aDate === null) {\n    return 1;\n  }\n\n  return bDate.getTime() - aDate.getTime();\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Articlelist\");","map":{"version":3,"sources":["/home/carlo/Desktop/Project/my-solid-blog/src/components/ArticlesList.js"],"names":["saveSolidDatasetAt","getSolidDataset","getSourceUrl","getUrl","removeThing","getThing","getThingAll","setThing","createThing","addDatetime","addDecimal","addStringNoLocale","setStringNoLocale","getDatetime","getDecimal","useSession","React","useEffect","useState","getOrCreateDataset","WriteArticles","Article","schema","rdf","solid","Articlelist","props","session","articlelist","setArticlelist","webId","info","identifier","Math","random","fetchDataset","myDataset","fetch","profile","publicTypeIndexUrl","publicTypeIndex","podUrl","containerUrl","list","e","console","log","addArticle","articleTitle","articleText","articlelistUrl","thingWithType","type","TextDigitalDocument","thingWithIdentifier","thingWithTitle","headline","thingWithDate","dateCreated","Date","thingWithText","text","updatedArticlelist","savedUpdatedArticlelist","removeArticle","thing","changeArticle","articleHeadline","articlesArray","myArticles","sort","byDate","map","currentValue","isLoggedIn","title","a","b","aUpdateDate","dateModified","bUpdateDate","aCreatedDate","bCreatedDate","aDate","bDate","getTime"],"mappings":"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","sourcesContent":["import { \n  saveSolidDatasetAt,\n  getSolidDataset,\n  getSourceUrl,\n  getUrl,\n  removeThing,\n  getThing,\n  getThingAll,\n  setThing,\n  createThing,\n  addDatetime,\n  addDecimal,\n  addStringNoLocale,\n  setStringNoLocale,\n  getDatetime,\n  getDecimal,\n} from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\nimport WriteArticles from './WriteArticles.js';\nimport Article from './Article.js';\nimport { schema, rdf, solid } from 'rdf-namespaces';\n\n\nfunction Articlelist(props) {\n  const { session } = useSession();\n  const [articlelist, setArticlelist] = useState();\n\n  const webId = session.info.webId ? session.info.webId : props.webId;\n  const identifier = Math.random();\n\n\n  useEffect(() => {\n    \n    const fetchDataset = async () => {\n      try {\n        const myDataset = await getSolidDataset(\n          webId,\n          {\n          fetch: session.fetch,\n          },\n        );\n        const profile = getThing(\n          myDataset,\n          webId,\n        );\n\n        const publicTypeIndexUrl = getUrl( profile, solid.publicTypeIndex );\n\n        const podUrl = getUrl(\n          profile,\n          \"http://www.w3.org/ns/pim/space#storage\",\n        );\n        const containerUrl = podUrl + \"public/my-solid-blog/articlelist.ttl\";\n        const list = await getOrCreateDataset(\n          containerUrl,\n          session.fetch,\n          publicTypeIndexUrl,\n        );\n        setArticlelist(list);\n\n      }\n      catch(e) {\n        console.log(\"an error occurr\");\n        console.log(e);\n      }\n    };\n    \n    fetchDataset();\n    \n  }, [session], webId);\n  \n\n  const addArticle = async (articleTitle, articleText) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n\n    const thingWithType = addStringNoLocale(\n      createThing(),\n      rdf.type,\n      schema.TextDigitalDocument,\n    );\n\n    const thingWithIdentifier = addDecimal(\n      thingWithType,\n      schema.identifier,\n      identifier,\n    );\n    const thingWithTitle = addStringNoLocale(\n      thingWithIdentifier,\n      schema.headline,\n      articleTitle,\n    );\n    const thingWithDate = addDatetime(\n      thingWithTitle,\n      schema.dateCreated,\n      new Date(),\n    );\n    const thingWithText = addStringNoLocale(\n      thingWithDate,\n      schema.text,\n      articleText,\n    );\n\n    const updatedArticlelist = setThing(\n      articlelist,\n      thingWithText,\n    );\n    \n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  };\n  \n  const removeArticle = async (thing) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const updatedArticlelist = removeThing(\n      articlelist,\n      thing,\n    );\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  }\n  \n  const changeArticle = async (thing, text, headline) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const articleText = setStringNoLocale(\n      thing,\n      schema.text,\n      text,\n    );\n    const articleHeadline = setStringNoLocale(\n      articleText,\n      schema.headline,\n      headline,\n    );\n\n    const updatedArticlelist = setThing(\n      articlelist,\n      articleHeadline,\n    );\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  };\n  \n  const articlesArray = articlelist ? getThingAll(articlelist) : [];  \n  const myArticles = articlesArray.sort(byDate).map((currentValue) => {\n    const identifier = getDecimal(\n      currentValue,\n      schema.identifier,\n    );\n    \n    return(\n      <li key={identifier} className=\"columns\">\n        <Article\n          thing={currentValue}\n          remove={async (thing) => await removeArticle(thing)}\n          change={async (thing, text, headline) => await changeArticle(thing, text, headline)}\n          webId={props.webId}\n        />\n      </li>\n    );\n  });\n  \n  return(\n    <>\n      <br/>\n      <div className=\"columns\">\n        &nbsp;&nbsp;&nbsp;&nbsp;\n        <div className=\"column is-half\">\n        <ul>{myArticles}</ul>\n        </div>\n        <div className=\"column is-one-quarter\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"notification is-warning is-light\">\n                This application was created in order to demonstrate how a decentralized blog could work.\n              </div>\n              <div className=\"content\">\n                All the data here displayed is saved in a remote Solid server, according to Solid technology.\n              </div>\n              <div className=\"content\">\n                This technology, created by Sir Tim Berners-Lee, allows the users to control their data.\n              </div>\n              <div className=\"content\">\n                If you want to have more information about this technology you can visit <a href=\"https://solidproject.org/\">https://solidproject.org/</a>.\n              </div>\n              <br/>\n              <br/>\n              <div className=\"content\">\n                This application was developed for the thesis of Carlo Tosoni (a.a. 2020/2021), bachelor degree in computer engineering.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <br/>\n      <br/>\n      { session.info.isLoggedIn ? (\n        <WriteArticles\n          newArticle={(title, text) => addArticle(title, text)}\n        />\n      ) : (\n        <>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Articlelist;\n\n\nfunction byDate(a, b) {\n  const aUpdateDate = getDatetime(a, schema.dateModified);\n  const bUpdateDate = getDatetime(b, schema.dateModified);\n    \n  const aCreatedDate = getDatetime(a, schema.dateCreated);\n  const bCreatedDate = getDatetime(b, schema.dateCreated);\n  \n  const aDate = aUpdateDate ?? aCreatedDate;\n  const bDate = bUpdateDate ?? bCreatedDate;\n  \n  if (bDate === null) {\n    return -1;\n  }\n  \n  if (aDate === null) {\n    return 1;\n  }\n  \n  return bDate.getTime() - aDate.getTime();\n}"]},"metadata":{},"sourceType":"module"}