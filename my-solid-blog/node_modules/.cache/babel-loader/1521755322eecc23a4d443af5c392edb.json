{"ast":null,"code":"var _jsxFileName = \"/home/carlo/Desktop/Project/my-solid-blog-test/src/components/ArticlesList.js\",\n    _s = $RefreshSig$();\n\nimport { saveSolidDatasetAt, getSolidDataset, getSourceUrl, getUrl, removeThing, getThing, getThingAll, setThing, createThing, addDatetime, addInteger, addStringNoLocale, setStringNoLocale, getStringNoLocale, getDatetime } from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\nimport WriteArticles from './WriteArticles.js';\nimport Article from './Article.js';\nimport { schema, rdf, solid } from 'rdf-namespaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Articlelist(props) {\n  _s();\n\n  const {\n    session\n  } = useSession();\n  const [articlelist, setArticlelist] = useState();\n  const [currentIdentifier, setCurrentIdentifier] = useState(0);\n  const myWebId = \"https://carlotosoni99.inrupt.net/profile/card#me\";\n  const webId = session.info.webId ? session.info.webId : myWebId;\n  let identifier = 0;\n  useEffect(() => {\n    let isComponentMounted = true;\n\n    const fetchDataset = async () => {\n      try {\n        const myDataset = await getSolidDataset(webId, {\n          fetch: session.fetch\n        });\n        const profile = getThing(myDataset, webId);\n        const publicTypeIndexUrl = getUrl(profile, solid.publicTypeIndex);\n        const podUrl = getUrl(profile, \"http://www.w3.org/ns/pim/space#storage\");\n        const containerUrl = podUrl + \"public/my-solid-blog/\";\n        const list = await getOrCreateDataset(containerUrl, session.fetch, publicTypeIndexUrl);\n\n        if (isComponentMounted) {\n          setArticlelist(list);\n        }\n      } catch (e) {\n        console.log(\"an error occurr\");\n        console.log(e);\n      }\n    };\n\n    fetchDataset();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [session]);\n\n  const addArticle = async (articleTitle, articleText) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const thingWithType = addStringNoLocale(createThing(), rdf.type, schema.TextDigitalDocument);\n    const thingWithIdentifier = addInteger(thingWithType, schema.identifier, currentIdentifier);\n    const thingWithTitle = addStringNoLocale(thingWithIdentifier, schema.headline, articleTitle);\n    const thingWithDate = addDatetime(thingWithTitle, schema.dateCreated, new Date());\n    const thingWithText = addStringNoLocale(thingWithDate, schema.text, articleText);\n    const updatedArticlelist = setThing(articlelist, thingWithText);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const removeArticle = async thing => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const updatedArticlelist = removeThing(articlelist, thing);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const changeArticle = async (thing, text, headline) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const articleText = setStringNoLocale(thing, schema.text, text);\n    const articleHeadline = setStringNoLocale(articleText, schema.headline, headline);\n    const updatedArticlelist = setThing(articlelist, articleHeadline);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const articlesArray = articlelist ? getThingAll(articlelist) : [];\n  setCurrentIdentifier(articlesArray.length);\n  console.log(\"ecco il numero: \" + currentIdentifier);\n  console.log(currentIdentifier);\n  const myArticles = articlesArray.sort(byDate).map(currentValue => {\n    const title = getStringNoLocale(currentValue, schema.headline);\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(Article, {\n        thing: currentValue,\n        remove: async thing => await removeArticle(thing),\n        change: async (thing, text, headline) => await changeArticle(thing, text, headline),\n        isLogged: props.isLogged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [\"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-half\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: myArticles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-one-quarter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"You can use TrustApp in order to undestand if the permissions are still valid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"This application is a part of a project.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WriteArticles, {\n      newArticle: (title, text) => addArticle(title, text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Articlelist, \"mkzwYbRZnqklJSl/726IAUXthU4=\", false, function () {\n  return [useSession];\n});\n\n_c = Articlelist;\nexport default Articlelist;\n\nfunction byDate(a, b) {\n  const aUpdateDate = getDatetime(a, schema.dateModified);\n  const bUpdateDate = getDatetime(b, schema.dateModified);\n  const aCreatedDate = getDatetime(a, schema.dateCreated);\n  const bCreatedDate = getDatetime(b, schema.dateCreated);\n  const aDate = aUpdateDate !== null && aUpdateDate !== void 0 ? aUpdateDate : aCreatedDate;\n  const bDate = bUpdateDate !== null && bUpdateDate !== void 0 ? bUpdateDate : bCreatedDate;\n\n  if (bDate === null) {\n    return -1;\n  }\n\n  if (aDate === null) {\n    return 1;\n  }\n\n  return bDate.getTime() - aDate.getTime();\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Articlelist\");","map":{"version":3,"sources":["/home/carlo/Desktop/Project/my-solid-blog-test/src/components/ArticlesList.js"],"names":["saveSolidDatasetAt","getSolidDataset","getSourceUrl","getUrl","removeThing","getThing","getThingAll","setThing","createThing","addDatetime","addInteger","addStringNoLocale","setStringNoLocale","getStringNoLocale","getDatetime","useSession","React","useEffect","useState","getOrCreateDataset","WriteArticles","Article","schema","rdf","solid","Articlelist","props","session","articlelist","setArticlelist","currentIdentifier","setCurrentIdentifier","myWebId","webId","info","identifier","isComponentMounted","fetchDataset","myDataset","fetch","profile","publicTypeIndexUrl","publicTypeIndex","podUrl","containerUrl","list","e","console","log","addArticle","articleTitle","articleText","articlelistUrl","thingWithType","type","TextDigitalDocument","thingWithIdentifier","thingWithTitle","headline","thingWithDate","dateCreated","Date","thingWithText","text","updatedArticlelist","savedUpdatedArticlelist","removeArticle","thing","changeArticle","articleHeadline","articlesArray","length","myArticles","sort","byDate","map","currentValue","title","isLogged","a","b","aUpdateDate","dateModified","bUpdateDate","aCreatedDate","bCreatedDate","aDate","bDate","getTime"],"mappings":"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","sourcesContent":["import { \n  saveSolidDatasetAt,\n  getSolidDataset,\n  getSourceUrl,\n  getUrl,\n  removeThing,\n  getThing,\n  getThingAll,\n  setThing,\n  createThing,\n  addDatetime,\n  addInteger,\n  addStringNoLocale,\n  setStringNoLocale,\n  getStringNoLocale,\n  getDatetime,\n} from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\nimport WriteArticles from './WriteArticles.js';\nimport Article from './Article.js';\nimport { schema, rdf, solid } from 'rdf-namespaces';\n\n\nfunction Articlelist(props) {\n  const { session } = useSession();\n  const [articlelist, setArticlelist] = useState();\n  const [currentIdentifier, setCurrentIdentifier] = useState(0);\n\n  const myWebId = \"https://carlotosoni99.inrupt.net/profile/card#me\"\n  const webId = session.info.webId ? session.info.webId : myWebId;\n  let identifier = 0;\n  useEffect(() => {\n    let isComponentMounted = true;\n    \n    const fetchDataset = async () => {\n      try {\n        const myDataset = await getSolidDataset(\n          webId,\n          {\n          fetch: session.fetch,\n          },\n        );\n        const profile = getThing(\n          myDataset,\n          webId,\n        );\n\n        const publicTypeIndexUrl = getUrl( profile, solid.publicTypeIndex );\n\n        const podUrl = getUrl(\n          profile,\n          \"http://www.w3.org/ns/pim/space#storage\",\n        );\n        const containerUrl = podUrl + \"public/my-solid-blog/\";\n        const list = await getOrCreateDataset(\n          containerUrl,\n          session.fetch,\n          publicTypeIndexUrl,\n        );\n        if (isComponentMounted) {\n          setArticlelist(list);\n        }\n      }\n      catch(e) {\n        console.log(\"an error occurr\");\n        console.log(e);\n      }\n    };\n    \n    fetchDataset();\n    \n    return () => {\n      isComponentMounted = false;\n    }\n  }, [session]);\n  \n\n  const addArticle = async (articleTitle, articleText) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n\n    const thingWithType = addStringNoLocale(\n      createThing(),\n      rdf.type,\n      schema.TextDigitalDocument,\n    );\n\n    const thingWithIdentifier = addInteger(\n      thingWithType,\n      schema.identifier,\n      currentIdentifier,\n    );\n    const thingWithTitle = addStringNoLocale(\n      thingWithIdentifier,\n      schema.headline,\n      articleTitle,\n    );\n    const thingWithDate = addDatetime(\n      thingWithTitle,\n      schema.dateCreated,\n      new Date(),\n    );\n    const thingWithText = addStringNoLocale(\n      thingWithDate,\n      schema.text,\n      articleText,\n    );\n\n    const updatedArticlelist = setThing(\n      articlelist,\n      thingWithText,\n    );\n    \n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  };\n  \n  const removeArticle = async (thing) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const updatedArticlelist = removeThing(\n      articlelist,\n      thing,\n    );\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  }\n  \n  const changeArticle = async (thing, text, headline) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const articleText = setStringNoLocale(\n      thing,\n      schema.text,\n      text,\n    );\n    const articleHeadline = setStringNoLocale(\n      articleText,\n      schema.headline,\n      headline,\n    );\n\n    const updatedArticlelist = setThing(\n      articlelist,\n      articleHeadline,\n    );\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  };\n  \n  const articlesArray = articlelist ? getThingAll(articlelist) : [];  \n  setCurrentIdentifier(articlesArray.length);\n  console.log(\"ecco il numero: \" + currentIdentifier);\n  console.log(currentIdentifier);\n  const myArticles = articlesArray.sort(byDate).map((currentValue) => {\n    const title = getStringNoLocale(\n      currentValue,\n      schema.headline,\n    );\n    \n    return(\n      <li key={title} className=\"columns\">\n        <Article\n          thing={currentValue}\n          remove={async (thing) => await removeArticle(thing)}\n          change={async (thing, text, headline) => await changeArticle(thing, text, headline)}\n          isLogged={props.isLogged}\n        />\n      </li>\n    );\n  });\n  \n  return(\n    <>\n      <br/>\n      <div className=\"columns\">\n        &nbsp;&nbsp;&nbsp;&nbsp;\n        <div className=\"column is-half\">\n        <ul>{myArticles}</ul>\n        </div>\n        <div className=\"column is-one-quarter\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"content\">\n                You can use TrustApp in order to undestand if the permissions are still valid.\n              </div>\n              <br/>\n              <div className=\"content\">\n                This application is a part of a project.\n              </div>\n              <br/>\n            </div>\n          </div>\n        </div>\n      </div>\n      <br/>\n      <br/>\n      <WriteArticles\n        newArticle={(title, text) => addArticle(title, text)}\n      />\n    </>\n  );\n}\n\nexport default Articlelist;\n\n\nfunction byDate(a, b) {\n  const aUpdateDate = getDatetime(a, schema.dateModified);\n  const bUpdateDate = getDatetime(b, schema.dateModified);\n    \n  const aCreatedDate = getDatetime(a, schema.dateCreated);\n  const bCreatedDate = getDatetime(b, schema.dateCreated);\n  \n  const aDate = aUpdateDate ?? aCreatedDate;\n  const bDate = bUpdateDate ?? bCreatedDate;\n  \n  if (bDate === null) {\n    return -1;\n  }\n  \n  if (aDate === null) {\n    return 1;\n  }\n  \n  return bDate.getTime() - aDate.getTime();\n}"]},"metadata":{},"sourceType":"module"}