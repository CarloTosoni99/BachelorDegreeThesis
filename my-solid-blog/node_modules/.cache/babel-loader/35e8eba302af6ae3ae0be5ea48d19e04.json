{"ast":null,"code":"var _jsxFileName = \"/home/carlo/Desktop/Project/my-solid-blog/src/components/ArticlesList.js\",\n    _s = $RefreshSig$();\n\nimport { saveSolidDatasetAt, getSolidDataset, getSourceUrl, removeThing, getThing, getThingAll, getUrl, setThing, createThing, addDatetime, addStringNoLocale, setStringNoLocale, getStringNoLocale, getDatetime } from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\nimport WriteArticles from './WriteArticles.js';\nimport Article from './Article.js';\nimport { schema, rdf } from 'rdf-namespaces';\nimport { FOAF, VCARD } from \"@inrupt/vocab-common-rdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Articlelist() {\n  _s();\n\n  const {\n    session\n  } = useSession();\n  const [articlelist, setArticlelist] = useState();\n  const profileDataset = getSolidDataset(session.info.webId);\n  const profile = getThing(profileDataset, session.info.webId);\n  const name = getStringNoLocale(profile, VCARD.fn);\n  useEffect(() => {\n    let isComponentMounted = true;\n\n    const fetchDataset = async () => {\n      try {\n        const myDataset = await getSolidDataset(session.info.webId, {\n          fetch: session.fetch\n        });\n        const profile = getThing(myDataset, session.info.webId);\n        const podUrl = getUrl(profile, \"http://www.w3.org/ns/pim/space#storage\");\n        const containerUrl = podUrl + \"my-solid-blog/\";\n        const list = await getOrCreateDataset(containerUrl, session.fetch);\n\n        if (isComponentMounted) {\n          setArticlelist(list);\n        }\n      } catch (e) {\n        console.log(\"an error occurr\");\n      }\n    };\n\n    fetchDataset();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [session]);\n\n  const addArticle = async (articleTitle, articleText) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const thingWithType = addStringNoLocale(createThing(), rdf.type, schema.TextDigitalDocument);\n    const thingWithTitle = addStringNoLocale(thingWithType, schema.headline, articleTitle);\n    const thingWithDate = addDatetime(thingWithTitle, schema.dateCreated, new Date());\n    const thingWithText = addStringNoLocale(thingWithDate, schema.text, articleText);\n    const updatedArticlelist = setThing(articlelist, thingWithText);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const removeArticle = async thing => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const updatedArticlelist = removeThing(articlelist, thing);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const changeArticle = async (thing, text, headline) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const articleText = setStringNoLocale(thing, schema.text, text);\n    const articleHeadline = setStringNoLocale(articleText, schema.headline, headline);\n    const updatedArticlelist = setThing(articlelist, articleHeadline);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const articlesArray = articlelist ? getThingAll(articlelist) : [];\n  const myArticles = articlesArray.sort(byDate).map(currentValue => {\n    const title = getStringNoLocale(currentValue, schema.headline);\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(Article, {\n        thing: currentValue,\n        remove: async thing => await removeArticle(thing),\n        change: async (thing, text, headline) => await changeArticle(thing, text, headline)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [\"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-half\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: myArticles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-one-quarter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"You can use TrustApp in order to undestand if the permissions are still valid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"This application is a part of a project.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WriteArticles, {\n      newArticle: (title, text) => addArticle(title, text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Articlelist, \"wE85eyWrrNBiIXXjHIweT6xtd6k=\", false, function () {\n  return [useSession];\n});\n\n_c = Articlelist;\nexport default Articlelist;\n\nfunction byDate(a, b) {\n  const aUpdateDate = getDatetime(a, schema.dateModified);\n  const bUpdateDate = getDatetime(b, schema.dateModified);\n  const aCreatedDate = getDatetime(a, schema.dateCreated);\n  const bCreatedDate = getDatetime(b, schema.dateCreated);\n  const aDate = aUpdateDate !== null && aUpdateDate !== void 0 ? aUpdateDate : aCreatedDate;\n  const bDate = bUpdateDate !== null && bUpdateDate !== void 0 ? bUpdateDate : bCreatedDate;\n\n  if (bDate === null) {\n    return -1;\n  }\n\n  if (aDate === null) {\n    return 1;\n  }\n\n  return bDate.getTime() - aDate.getTime();\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Articlelist\");","map":{"version":3,"sources":["/home/carlo/Desktop/Project/my-solid-blog/src/components/ArticlesList.js"],"names":["saveSolidDatasetAt","getSolidDataset","getSourceUrl","removeThing","getThing","getThingAll","getUrl","setThing","createThing","addDatetime","addStringNoLocale","setStringNoLocale","getStringNoLocale","getDatetime","useSession","React","useEffect","useState","getOrCreateDataset","WriteArticles","Article","schema","rdf","FOAF","VCARD","Articlelist","session","articlelist","setArticlelist","profileDataset","info","webId","profile","name","fn","isComponentMounted","fetchDataset","myDataset","fetch","podUrl","containerUrl","list","e","console","log","addArticle","articleTitle","articleText","articlelistUrl","thingWithType","type","TextDigitalDocument","thingWithTitle","headline","thingWithDate","dateCreated","Date","thingWithText","text","updatedArticlelist","savedUpdatedArticlelist","removeArticle","thing","changeArticle","articleHeadline","articlesArray","myArticles","sort","byDate","map","currentValue","title","a","b","aUpdateDate","dateModified","bUpdateDate","aCreatedDate","bCreatedDate","aDate","bDate","getTime"],"mappings":";;;AAAA,SACIA,kBADJ,EAEIC,eAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,WANJ,EAOIC,MAPJ,EAQIC,QARJ,EASIC,WATJ,EAUIC,WAVJ,EAWIC,iBAXJ,EAYIC,iBAZJ,EAaIC,iBAbJ,EAcIC,WAdJ,QAeS,sBAfT;AAgBE,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,gBAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,0BAA5B;;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAcZ,UAAU,EAA9B;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C;AAEA,QAAMY,cAAc,GAAG5B,eAAe,CAACyB,OAAO,CAACI,IAAR,CAAaC,KAAd,CAAtC;AACA,QAAMC,OAAO,GAAG5B,QAAQ,CAACyB,cAAD,EAAiBH,OAAO,CAACI,IAAR,CAAaC,KAA9B,CAAxB;AACA,QAAME,IAAI,GAAGrB,iBAAiB,CAACoB,OAAD,EAAUR,KAAK,CAACU,EAAhB,CAA9B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,kBAAkB,GAAG,IAAzB;;AAEA,UAAMC,YAAY,GAAG,YAAY;AAC/B,UAAI;AACF,cAAMC,SAAS,GAAG,MAAMpC,eAAe,CACrCyB,OAAO,CAACI,IAAR,CAAaC,KADwB,EAErC;AACAO,UAAAA,KAAK,EAAEZ,OAAO,CAACY;AADf,SAFqC,CAAvC;AAMA,cAAMN,OAAO,GAAG5B,QAAQ,CACtBiC,SADsB,EAEtBX,OAAO,CAACI,IAAR,CAAaC,KAFS,CAAxB;AAIA,cAAMQ,MAAM,GAAGjC,MAAM,CACnB0B,OADmB,EAEnB,wCAFmB,CAArB;AAIA,cAAMQ,YAAY,GAAGD,MAAM,GAAG,gBAA9B;AACA,cAAME,IAAI,GAAG,MAAMvB,kBAAkB,CACnCsB,YADmC,EAEnCd,OAAO,CAACY,KAF2B,CAArC;;AAIA,YAAIH,kBAAJ,EAAwB;AACtBP,UAAAA,cAAc,CAACa,IAAD,CAAd;AACD;AACF,OAvBD,CAwBA,OAAMC,CAAN,EAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACF,KA5BD;;AA8BAR,IAAAA,YAAY;AAEZ,WAAO,MAAM;AACXD,MAAAA,kBAAkB,GAAG,KAArB;AACD,KAFD;AAGD,GAtCQ,EAsCN,CAACT,OAAD,CAtCM,CAAT;;AAwCA,QAAMmB,UAAU,GAAG,OAAOC,YAAP,EAAqBC,WAArB,KAAqC;AACtD,UAAMC,cAAc,GAAG9C,YAAY,CAACyB,WAAD,CAAnC;AAEA,UAAMsB,aAAa,GAAGvC,iBAAiB,CACrCF,WAAW,EAD0B,EAErCc,GAAG,CAAC4B,IAFiC,EAGrC7B,MAAM,CAAC8B,mBAH8B,CAAvC;AAKA,UAAMC,cAAc,GAAG1C,iBAAiB,CACtCuC,aADsC,EAEtC5B,MAAM,CAACgC,QAF+B,EAGtCP,YAHsC,CAAxC;AAKA,UAAMQ,aAAa,GAAG7C,WAAW,CAC/B2C,cAD+B,EAE/B/B,MAAM,CAACkC,WAFwB,EAG/B,IAAIC,IAAJ,EAH+B,CAAjC;AAKA,UAAMC,aAAa,GAAG/C,iBAAiB,CACrC4C,aADqC,EAErCjC,MAAM,CAACqC,IAF8B,EAGrCX,WAHqC,CAAvC;AAKA,UAAMY,kBAAkB,GAAGpD,QAAQ,CACjCoB,WADiC,EAEjC8B,aAFiC,CAAnC;AAKA,UAAMG,uBAAuB,GAAG,MAAM5D,kBAAkB,CACtDgD,cADsD,EAEtDW,kBAFsD,EAGtD;AAACrB,MAAAA,KAAK,EAAEZ,OAAO,CAACY;AAAhB,KAHsD,CAAxD;AAKAV,IAAAA,cAAc,CAACgC,uBAAD,CAAd;AACD,GAlCD;;AAoCA,QAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACrC,UAAMd,cAAc,GAAG9C,YAAY,CAACyB,WAAD,CAAnC;AACA,UAAMgC,kBAAkB,GAAGxD,WAAW,CACpCwB,WADoC,EAEpCmC,KAFoC,CAAtC;AAIA,UAAMF,uBAAuB,GAAG,MAAM5D,kBAAkB,CACtDgD,cADsD,EAEtDW,kBAFsD,EAGtD;AAACrB,MAAAA,KAAK,EAAEZ,OAAO,CAACY;AAAhB,KAHsD,CAAxD;AAKAV,IAAAA,cAAc,CAACgC,uBAAD,CAAd;AACD,GAZD;;AAcA,QAAMG,aAAa,GAAG,OAAOD,KAAP,EAAcJ,IAAd,EAAoBL,QAApB,KAAiC;AACrD,UAAML,cAAc,GAAG9C,YAAY,CAACyB,WAAD,CAAnC;AACA,UAAMoB,WAAW,GAAGpC,iBAAiB,CACnCmD,KADmC,EAEnCzC,MAAM,CAACqC,IAF4B,EAGnCA,IAHmC,CAArC;AAKA,UAAMM,eAAe,GAAGrD,iBAAiB,CACvCoC,WADuC,EAEvC1B,MAAM,CAACgC,QAFgC,EAGvCA,QAHuC,CAAzC;AAKA,UAAMM,kBAAkB,GAAGpD,QAAQ,CACjCoB,WADiC,EAEjCqC,eAFiC,CAAnC;AAIA,UAAMJ,uBAAuB,GAAG,MAAM5D,kBAAkB,CACtDgD,cADsD,EAEtDW,kBAFsD,EAGtD;AAACrB,MAAAA,KAAK,EAAEZ,OAAO,CAACY;AAAhB,KAHsD,CAAxD;AAKAV,IAAAA,cAAc,CAACgC,uBAAD,CAAd;AACD,GAtBD;;AAwBA,QAAMK,aAAa,GAAGtC,WAAW,GAAGtB,WAAW,CAACsB,WAAD,CAAd,GAA8B,EAA/D;AACA,QAAMuC,UAAU,GAAGD,aAAa,CAACE,IAAd,CAAmBC,MAAnB,EAA2BC,GAA3B,CAAgCC,YAAD,IAAkB;AAClE,UAAMC,KAAK,GAAG3D,iBAAiB,CAC7B0D,YAD6B,EAE7BjD,MAAM,CAACgC,QAFsB,CAA/B;AAKA,wBACE;AAAgB,MAAA,SAAS,EAAC,SAA1B;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,KAAK,EAAEiB,YADT;AAEE,QAAA,MAAM,EAAE,MAAOR,KAAP,IAAiB,MAAMD,aAAa,CAACC,KAAD,CAF9C;AAGE,QAAA,MAAM,EAAE,OAAOA,KAAP,EAAcJ,IAAd,EAAoBL,QAApB,KAAiC,MAAMU,aAAa,CAACD,KAAD,EAAQJ,IAAR,EAAcL,QAAd;AAH9D;AAAA;AAAA;AAAA;AAAA;AADF,OAASkB,KAAT;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAfkB,CAAnB;AAiBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGtC;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,kDAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACA;AAAA,oBAAKiC;AAAL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAQE;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAyBE;AAAA;AAAA;AAAA;AAAA,YAzBF,eA0BE;AAAA;AAAA;AAAA;AAAA,YA1BF,eA2BE,QAAC,aAAD;AACE,MAAA,UAAU,EAAE,CAACK,KAAD,EAAQb,IAAR,KAAiBb,UAAU,CAAC0B,KAAD,EAAQb,IAAR;AADzC;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA,kBADF;AAiCD;;GA7KQjC,W;UACaX,U;;;KADbW,W;AA+KT,eAAeA,WAAf;;AAGA,SAAS2C,MAAT,CAAgBI,CAAhB,EAAmBC,CAAnB,EAAsB;AACpB,QAAMC,WAAW,GAAG7D,WAAW,CAAC2D,CAAD,EAAInD,MAAM,CAACsD,YAAX,CAA/B;AACA,QAAMC,WAAW,GAAG/D,WAAW,CAAC4D,CAAD,EAAIpD,MAAM,CAACsD,YAAX,CAA/B;AAEA,QAAME,YAAY,GAAGhE,WAAW,CAAC2D,CAAD,EAAInD,MAAM,CAACkC,WAAX,CAAhC;AACA,QAAMuB,YAAY,GAAGjE,WAAW,CAAC4D,CAAD,EAAIpD,MAAM,CAACkC,WAAX,CAAhC;AAEA,QAAMwB,KAAK,GAAGL,WAAH,aAAGA,WAAH,cAAGA,WAAH,GAAkBG,YAA7B;AACA,QAAMG,KAAK,GAAGJ,WAAH,aAAGA,WAAH,cAAGA,WAAH,GAAkBE,YAA7B;;AAEA,MAAIE,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,CAAC,CAAR;AACD;;AAED,MAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,CAAP;AACD;;AAED,SAAOC,KAAK,CAACC,OAAN,KAAkBF,KAAK,CAACE,OAAN,EAAzB;AACD","sourcesContent":["import { \n    saveSolidDatasetAt,\n    getSolidDataset,\n    getSourceUrl,\n    removeThing,\n    getThing,\n    getThingAll,\n    getUrl,\n    setThing,\n    createThing,\n    addDatetime,\n    addStringNoLocale,\n    setStringNoLocale,\n    getStringNoLocale,\n    getDatetime,\n  } from \"@inrupt/solid-client\";\n  import { useSession } from \"@inrupt/solid-ui-react\";\n  import React, { useEffect, useState } from \"react\";\n  import { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\n  import WriteArticles from './WriteArticles.js';\n  import Article from './Article.js';\n  import { schema, rdf } from 'rdf-namespaces';\n  import { FOAF, VCARD } from \"@inrupt/vocab-common-rdf\";\n\n  \n  function Articlelist() {\n    const { session } = useSession();\n    const [articlelist, setArticlelist] = useState();\n    \n    const profileDataset = getSolidDataset(session.info.webId);\n    const profile = getThing(profileDataset, session.info.webId);\n    const name = getStringNoLocale(profile, VCARD.fn)\n\n    useEffect(() => {\n      let isComponentMounted = true;\n      \n      const fetchDataset = async () => {\n        try {\n          const myDataset = await getSolidDataset(\n            session.info.webId,\n            {\n            fetch: session.fetch,\n            },\n          );\n          const profile = getThing(\n            myDataset,\n            session.info.webId,\n          );\n          const podUrl = getUrl(\n            profile,\n            \"http://www.w3.org/ns/pim/space#storage\",\n          );\n          const containerUrl = podUrl + \"my-solid-blog/\";\n          const list = await getOrCreateDataset(\n            containerUrl,\n            session.fetch,\n          );\n          if (isComponentMounted) {\n            setArticlelist(list);\n          }\n        }\n        catch(e) {\n          console.log(\"an error occurr\");\n        }\n      };\n      \n      fetchDataset();\n      \n      return () => {\n        isComponentMounted = false;\n      }\n    }, [session]);\n    \n    const addArticle = async (articleTitle, articleText) => {\n      const articlelistUrl = getSourceUrl(articlelist);\n\n      const thingWithType = addStringNoLocale(\n        createThing(),\n        rdf.type,\n        schema.TextDigitalDocument,\n      );\n      const thingWithTitle = addStringNoLocale(\n        thingWithType,\n        schema.headline,\n        articleTitle,\n      );\n      const thingWithDate = addDatetime(\n        thingWithTitle,\n        schema.dateCreated,\n        new Date(),\n      );\n      const thingWithText = addStringNoLocale(\n        thingWithDate,\n        schema.text,\n        articleText,\n      );\n      const updatedArticlelist = setThing(\n        articlelist,\n        thingWithText,\n      );\n      \n      const savedUpdatedArticlelist = await saveSolidDatasetAt(\n        articlelistUrl,\n        updatedArticlelist,\n        {fetch: session.fetch},\n      );\n      setArticlelist(savedUpdatedArticlelist);\n    };\n    \n    const removeArticle = async (thing) => {\n      const articlelistUrl = getSourceUrl(articlelist);\n      const updatedArticlelist = removeThing(\n        articlelist,\n        thing,\n      );\n      const savedUpdatedArticlelist = await saveSolidDatasetAt(\n        articlelistUrl,\n        updatedArticlelist,\n        {fetch: session.fetch},\n      );\n      setArticlelist(savedUpdatedArticlelist);\n    }\n    \n    const changeArticle = async (thing, text, headline) => {\n      const articlelistUrl = getSourceUrl(articlelist);\n      const articleText = setStringNoLocale(\n        thing,\n        schema.text,\n        text,\n      );\n      const articleHeadline = setStringNoLocale(\n        articleText,\n        schema.headline,\n        headline,\n      );\n      const updatedArticlelist = setThing(\n        articlelist,\n        articleHeadline,\n      );\n      const savedUpdatedArticlelist = await saveSolidDatasetAt(\n        articlelistUrl,\n        updatedArticlelist,\n        {fetch: session.fetch},\n      );\n      setArticlelist(savedUpdatedArticlelist);\n    };\n    \n    const articlesArray = articlelist ? getThingAll(articlelist) : [];  \n    const myArticles = articlesArray.sort(byDate).map((currentValue) => {\n      const title = getStringNoLocale(\n        currentValue,\n        schema.headline,\n      );\n      \n      return(\n        <li key={title} className=\"columns\">\n          <Article\n            thing={currentValue}\n            remove={async (thing) => await removeArticle(thing)}\n            change={async (thing, text, headline) => await changeArticle(thing, text, headline)}\n          />\n        </li>\n      );\n    });\n    \n    return(\n      <>\n        <br/>\n        <div>\n          {name}\n        </div>\n        <div className=\"columns\">\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <div className=\"column is-half\">\n          <ul>{myArticles}</ul>\n          </div>\n          <div className=\"column is-one-quarter\">\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <div className=\"content\">\n                  You can use TrustApp in order to undestand if the permissions are still valid.\n                </div>\n                <br/>\n                <div className=\"content\">\n                  This application is a part of a project.\n                </div>\n                <br/>\n              </div>\n            </div>\n          </div>\n        </div>\n        <br/>\n        <br/>\n        <WriteArticles\n          newArticle={(title, text) => addArticle(title, text)}\n        />\n      </>\n    );\n  }\n  \n  export default Articlelist;\n  \n  \n  function byDate(a, b) {\n    const aUpdateDate = getDatetime(a, schema.dateModified);\n    const bUpdateDate = getDatetime(b, schema.dateModified);\n      \n    const aCreatedDate = getDatetime(a, schema.dateCreated);\n    const bCreatedDate = getDatetime(b, schema.dateCreated);\n    \n    const aDate = aUpdateDate ?? aCreatedDate;\n    const bDate = bUpdateDate ?? bCreatedDate;\n    \n    if (bDate === null) {\n      return -1;\n    }\n    \n    if (aDate === null) {\n      return 1;\n    }\n    \n    return bDate.getTime() - aDate.getTime();\n  }"]},"metadata":{},"sourceType":"module"}