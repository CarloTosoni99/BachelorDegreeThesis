{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst solid_client_authn_core_1 = require(\"@inrupt/solid-client-authn-core\");\n\nconst oidc_client_ext_1 = require(\"@inrupt/oidc-client-ext\");\n\nconst jose_legacy_modules_1 = require(\"@inrupt/jose-legacy-modules\");\n\nconst constant_1 = require(\"./constant\");\n\nconst globalFetch = (request, init) => window.fetch(request, init);\n\nclass ClientAuthentication {\n  constructor(loginHandler, redirectHandler, logoutHandler, sessionInfoManager, issuerConfigFetcher) {\n    this.loginHandler = loginHandler;\n    this.redirectHandler = redirectHandler;\n    this.logoutHandler = logoutHandler;\n    this.sessionInfoManager = sessionInfoManager;\n    this.issuerConfigFetcher = issuerConfigFetcher;\n\n    this.login = async options => {\n      var _a, _b;\n\n      await this.sessionInfoManager.clear(options.sessionId);\n      const redirectUrl = oidc_client_ext_1.removeOidcQueryParam((_a = options.redirectUrl) !== null && _a !== void 0 ? _a : window.location.href);\n      await this.loginHandler.handle({ ...options,\n        redirectUrl,\n        clientName: (_b = options.clientName) !== null && _b !== void 0 ? _b : options.clientId\n      });\n    };\n\n    this.fetch = globalFetch;\n\n    this.logout = async sessionId => {\n      await this.logoutHandler.handle(sessionId);\n      this.fetch = globalFetch;\n    };\n\n    this.getSessionInfo = async sessionId => {\n      return this.sessionInfoManager.get(sessionId);\n    };\n\n    this.getAllSessionInfo = async () => {\n      return this.sessionInfoManager.getAll();\n    };\n\n    this.validateCurrentSession = async () => {\n      const currentSessionId = window.localStorage.getItem(constant_1.KEY_CURRENT_SESSION);\n\n      if (currentSessionId === null) {\n        return null;\n      }\n\n      const sessionInfo = await this.sessionInfoManager.get(currentSessionId);\n\n      if (sessionInfo === undefined || sessionInfo.idToken === undefined || sessionInfo.clientAppId === undefined || sessionInfo.issuer === undefined) {\n        return null;\n      }\n\n      const issuerConfig = await this.issuerConfigFetcher.fetchConfig(sessionInfo.issuer);\n\n      try {\n        const jwk = await solid_client_authn_core_1.fetchJwks(issuerConfig.jwksUri, issuerConfig.issuer);\n        await jose_legacy_modules_1.jwtVerify(sessionInfo.idToken, await jose_legacy_modules_1.parseJwk(jwk), {\n          audience: sessionInfo.clientAppId,\n          issuer: issuerConfig.issuer\n        });\n        return sessionInfo;\n      } catch (e) {}\n\n      return null;\n    };\n\n    this.handleIncomingRedirect = async url => {\n      const redirectInfo = await this.redirectHandler.handle(url);\n      this.fetch = redirectInfo.fetch.bind(window);\n      const cleanedUpUrl = new URL(url);\n      cleanedUpUrl.searchParams.delete(\"state\");\n      cleanedUpUrl.searchParams.delete(\"code\");\n      cleanedUpUrl.searchParams.delete(\"id_token\");\n      cleanedUpUrl.searchParams.delete(\"access_token\");\n      window.history.replaceState(null, \"\", cleanedUpUrl.toString());\n      return {\n        isLoggedIn: redirectInfo.isLoggedIn,\n        webId: redirectInfo.webId,\n        sessionId: redirectInfo.sessionId,\n        expirationDate: redirectInfo.expirationDate\n      };\n    };\n  }\n\n}\n\nexports.default = ClientAuthentication;","map":{"version":3,"sources":["../src/ClientAuthentication.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst solid_client_authn_core_1 = require(\"@inrupt/solid-client-authn-core\");\nconst oidc_client_ext_1 = require(\"@inrupt/oidc-client-ext\");\nconst jose_legacy_modules_1 = require(\"@inrupt/jose-legacy-modules\");\nconst constant_1 = require(\"./constant\");\nconst globalFetch = (request, init) => window.fetch(request, init);\nclass ClientAuthentication {\n    constructor(loginHandler, redirectHandler, logoutHandler, sessionInfoManager, issuerConfigFetcher) {\n        this.loginHandler = loginHandler;\n        this.redirectHandler = redirectHandler;\n        this.logoutHandler = logoutHandler;\n        this.sessionInfoManager = sessionInfoManager;\n        this.issuerConfigFetcher = issuerConfigFetcher;\n        this.login = async (options) => {\n            var _a, _b;\n            await this.sessionInfoManager.clear(options.sessionId);\n            const redirectUrl = oidc_client_ext_1.removeOidcQueryParam((_a = options.redirectUrl) !== null && _a !== void 0 ? _a : window.location.href);\n            await this.loginHandler.handle({\n                ...options,\n                redirectUrl,\n                clientName: (_b = options.clientName) !== null && _b !== void 0 ? _b : options.clientId,\n            });\n        };\n        this.fetch = globalFetch;\n        this.logout = async (sessionId) => {\n            await this.logoutHandler.handle(sessionId);\n            this.fetch = globalFetch;\n        };\n        this.getSessionInfo = async (sessionId) => {\n            return this.sessionInfoManager.get(sessionId);\n        };\n        this.getAllSessionInfo = async () => {\n            return this.sessionInfoManager.getAll();\n        };\n        this.validateCurrentSession = async () => {\n            const currentSessionId = window.localStorage.getItem(constant_1.KEY_CURRENT_SESSION);\n            if (currentSessionId === null) {\n                return null;\n            }\n            const sessionInfo = await this.sessionInfoManager.get(currentSessionId);\n            if (sessionInfo === undefined ||\n                sessionInfo.idToken === undefined ||\n                sessionInfo.clientAppId === undefined ||\n                sessionInfo.issuer === undefined) {\n                return null;\n            }\n            const issuerConfig = await this.issuerConfigFetcher.fetchConfig(sessionInfo.issuer);\n            try {\n                const jwk = await solid_client_authn_core_1.fetchJwks(issuerConfig.jwksUri, issuerConfig.issuer);\n                await jose_legacy_modules_1.jwtVerify(sessionInfo.idToken, await jose_legacy_modules_1.parseJwk(jwk), {\n                    audience: sessionInfo.clientAppId,\n                    issuer: issuerConfig.issuer,\n                });\n                return sessionInfo;\n            }\n            catch (e) {\n            }\n            return null;\n        };\n        this.handleIncomingRedirect = async (url) => {\n            const redirectInfo = await this.redirectHandler.handle(url);\n            this.fetch = redirectInfo.fetch.bind(window);\n            const cleanedUpUrl = new URL(url);\n            cleanedUpUrl.searchParams.delete(\"state\");\n            cleanedUpUrl.searchParams.delete(\"code\");\n            cleanedUpUrl.searchParams.delete(\"id_token\");\n            cleanedUpUrl.searchParams.delete(\"access_token\");\n            window.history.replaceState(null, \"\", cleanedUpUrl.toString());\n            return {\n                isLoggedIn: redirectInfo.isLoggedIn,\n                webId: redirectInfo.webId,\n                sessionId: redirectInfo.sessionId,\n                expirationDate: redirectInfo.expirationDate,\n            };\n        };\n    }\n}\nexports.default = ClientAuthentication;\n//# sourceMappingURL=ClientAuthentication.js.map"]},"metadata":{},"sourceType":"script"}