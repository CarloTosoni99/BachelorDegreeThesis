{"ast":null,"code":"import { createSolidDataset, getSolidDataset, saveSolidDatasetAt, createThing, getThing, addUrl, getSourceUrl, getUrl, setThing, asUrl } from \"@inrupt/solid-client\";\nimport { solid, rdf, schema } from 'rdf-namespaces';\nexport async function getOrCreateDataset(containerUri, fetch, publicTypeIndexUri) {\n  //first possibility, public data\n  const publicTypeIndex = await getSolidDataset(publicTypeIndexUri);\n  const articleListThing = getThing(publicTypeIndex, \"https://carlotosoni99.inrupt.net/settings/publicTypeIndex.ttl#articlelist\");\n\n  if (articleListThing === null) {\n    const articlelistUri = containerUri + \"articlelist.ttl\";\n    return await initialiseArticlelist(articlelistUri, fetch, publicTypeIndex, publicTypeIndexUri);\n  }\n\n  const articlelistUri = getUrl(articleListThing, solid.instance);\n  return await getSolidDataset(articlelistUri); //second possibility, outdated\n\n  /*\n  const articlelistUri = containerUri + \"articlelist.ttl\";\n   try {\n    const articlelistDataset = await getSolidDataset(\n      articlelistUri,\n      {\n      fetch: fetch,\n      },\n    );\n    return articlelistDataset;\n  } catch(e) {\n    if(e.statusCode === 404) {\n      const articlelistDataset = await saveSolidDatasetAt(\n        articlelistUri,\n        createSolidDataset(),\n        {\n        fetch: fetch,\n        },\n      );\n      return articlelistDataset\n    }\n  }\n  return;\n  */\n} //first possibility part 2\n\nasync function initialiseArticlelist(articlelistUri, fetch, publicTypeIndex, publicTypeIndexUri) {\n  console.log(\"vediamo se funziona: \" + publicTypeIndexUri);\n  const listPublicType = getThing(publicTypeIndex, publicTypeIndexUri);\n\n  if (listPublicType === null) {\n    console.log(\"non stampare questo please\");\n  }\n\n  return null;\n  /*const articlelistDataset = await saveSolidDatasetAt(\n    articlelistUri,\n    createSolidDataset(),\n    {\n    fetch: fetch,\n    },\n  );\n   const newPublicThing = createThing({url: \"https://carlotosoni99.inrupt.net/settings/publicTypeIndex.ttl#articlelist\"});\n   const thingWithType = addUrl(\n    newPublicThing,\n    rdf.type,\n    solid.TypeRegistration,\n  );\n   const thingWithForClass = addUrl(\n    thingWithType,\n    solid.forClass,\n    schema.TextDigitalDocument\n  );\n   const thingWithInstance = addUrl(\n    thingWithForClass,\n    solid.instance,\n    getSourceUrl(articlelistDataset),\n  );\n   const uploadedPublicTypeIndex = setThing(\n    publicTypeIndex,\n    thingWithInstance,\n  );\n   await saveSolidDatasetAt(\n    publicTypeIndexUri,\n    uploadedPublicTypeIndex,\n    {\n      fetch: fetch,\n    },  \n  );\n   return articlelistDataset;*/\n}","map":{"version":3,"sources":["/home/carlo/Desktop/Project/my-solid-blog-test/src/utils/GetOrCreateDataset.js"],"names":["createSolidDataset","getSolidDataset","saveSolidDatasetAt","createThing","getThing","addUrl","getSourceUrl","getUrl","setThing","asUrl","solid","rdf","schema","getOrCreateDataset","containerUri","fetch","publicTypeIndexUri","publicTypeIndex","articleListThing","articlelistUri","initialiseArticlelist","instance","console","log","listPublicType"],"mappings":"AAAA,SACEA,kBADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,YAPF,EAQEC,MARF,EASEC,QATF,EAUEC,KAVF,QAWO,sBAXP;AAaA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,MAArB,QAAmC,gBAAnC;AAGA,OAAO,eAAeC,kBAAf,CAAkCC,YAAlC,EAAgDC,KAAhD,EAAuDC,kBAAvD,EAA2E;AAEhF;AACA,QAAMC,eAAe,GAAG,MAAMhB,eAAe,CAACe,kBAAD,CAA7C;AAEA,QAAME,gBAAgB,GAAGd,QAAQ,CAACa,eAAD,EAAkB,2EAAlB,CAAjC;;AAEA,MAAKC,gBAAgB,KAAK,IAA1B,EAAiC;AAC/B,UAAMC,cAAc,GAAGL,YAAY,GAAG,iBAAtC;AACA,WAAO,MAAMM,qBAAqB,CAACD,cAAD,EAAiBJ,KAAjB,EAAwBE,eAAxB,EAAyCD,kBAAzC,CAAlC;AACD;;AAED,QAAMG,cAAc,GAAGZ,MAAM,CAACW,gBAAD,EAAmBR,KAAK,CAACW,QAAzB,CAA7B;AAEA,SAAO,MAAMpB,eAAe,CAACkB,cAAD,CAA5B,CAdgF,CAgBhF;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,C,CAGD;;AACA,eAAeC,qBAAf,CAAsCD,cAAtC,EAAsDJ,KAAtD,EAA6DE,eAA7D,EAA8ED,kBAA9E,EAAkG;AAEhGM,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BP,kBAAtC;AACA,QAAMQ,cAAc,GAAGpB,QAAQ,CAC7Ba,eAD6B,EAE7BD,kBAF6B,CAA/B;;AAKA,MAAIQ,cAAc,KAAK,IAAvB,EAA6B;AAC3BF,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AAED,SAAO,IAAP;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQC","sourcesContent":["import {\n  createSolidDataset,\n  getSolidDataset,\n  saveSolidDatasetAt,\n  createThing,\n  getThing,\n  addUrl,\n  getSourceUrl,\n  getUrl,\n  setThing,\n  asUrl,\n} from \"@inrupt/solid-client\";\n\nimport { solid, rdf, schema } from 'rdf-namespaces';\n\n\nexport async function getOrCreateDataset(containerUri, fetch, publicTypeIndexUri) {\n\n  //first possibility, public data\n  const publicTypeIndex = await getSolidDataset(publicTypeIndexUri);\n\n  const articleListThing = getThing(publicTypeIndex, \"https://carlotosoni99.inrupt.net/settings/publicTypeIndex.ttl#articlelist\");\n\n  if ( articleListThing === null ) {\n    const articlelistUri = containerUri + \"articlelist.ttl\";\n    return await initialiseArticlelist(articlelistUri, fetch, publicTypeIndex, publicTypeIndexUri);\n  }\n\n  const articlelistUri = getUrl(articleListThing, solid.instance);\n\n  return await getSolidDataset(articlelistUri);\n\n  //second possibility, outdated\n  /*\n  const articlelistUri = containerUri + \"articlelist.ttl\";\n\n  try {\n    const articlelistDataset = await getSolidDataset(\n      articlelistUri,\n      {\n      fetch: fetch,\n      },\n    );\n    return articlelistDataset;\n  } catch(e) {\n    if(e.statusCode === 404) {\n      const articlelistDataset = await saveSolidDatasetAt(\n        articlelistUri,\n        createSolidDataset(),\n        {\n        fetch: fetch,\n        },\n      );\n      return articlelistDataset\n    }\n  }\n  return;\n  */\n}\n\n\n//first possibility part 2\nasync function initialiseArticlelist (articlelistUri, fetch, publicTypeIndex, publicTypeIndexUri) {\n\n  console.log(\"vediamo se funziona: \" + publicTypeIndexUri);\n  const listPublicType = getThing(\n    publicTypeIndex,\n    publicTypeIndexUri,\n  );\n\n  if( listPublicType === null) {\n    console.log(\"non stampare questo please\");\n  }\n\n  return null;\n  /*const articlelistDataset = await saveSolidDatasetAt(\n    articlelistUri,\n    createSolidDataset(),\n    {\n    fetch: fetch,\n    },\n  );\n\n  const newPublicThing = createThing({url: \"https://carlotosoni99.inrupt.net/settings/publicTypeIndex.ttl#articlelist\"});\n\n  const thingWithType = addUrl(\n    newPublicThing,\n    rdf.type,\n    solid.TypeRegistration,\n  );\n\n  const thingWithForClass = addUrl(\n    thingWithType,\n    solid.forClass,\n    schema.TextDigitalDocument\n  );\n\n  const thingWithInstance = addUrl(\n    thingWithForClass,\n    solid.instance,\n    getSourceUrl(articlelistDataset),\n  );\n\n  const uploadedPublicTypeIndex = setThing(\n    publicTypeIndex,\n    thingWithInstance,\n  );\n\n  await saveSolidDatasetAt(\n    publicTypeIndexUri,\n    uploadedPublicTypeIndex,\n    {\n      fetch: fetch,\n    },  \n  );\n\n  return articlelistDataset;*/\n}"]},"metadata":{},"sourceType":"module"}