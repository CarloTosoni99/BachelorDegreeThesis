{"ast":null,"code":"var _jsxFileName = \"/home/carlo/Desktop/Project/my-solid-blog-test/src/components/ArticlesList.js\",\n    _s = $RefreshSig$();\n\nimport { saveSolidDatasetAt, getSolidDataset, getSourceUrl, getBoolean, getDate, getDecimal, getInteger, getStringWithLocale, getUrl, getUrlAll, getTime, removeThing, getThing, getThingAll, setThing, createThing, addDatetime, addStringNoLocale, setStringNoLocale, getStringNoLocale, getDatetime, asUrl } from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\nimport WriteArticles from './WriteArticles.js';\nimport Article from './Article.js';\nimport { schema, rdf, acl, solid } from 'rdf-namespaces'; //eliminate later\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Articlelist() {\n  _s();\n\n  const {\n    session\n  } = useSession();\n  const [articlelist, setArticlelist] = useState();\n  useEffect(() => {\n    let isComponentMounted = true;\n\n    const fetchDataset = async () => {\n      try {\n        const myDataset = await getSolidDataset(session.info.webId, {\n          fetch: session.fetch\n        });\n        const profile = getThing(myDataset, session.info.webId);\n        const publicTypeIndexUrl = getUrl(profile, solid.publicTypeIndex);\n        const podUrl = getUrl(profile, \"http://www.w3.org/ns/pim/space#storage\");\n        const containerUrl = podUrl + \"public/my-solid-blog/\";\n        const list = await getOrCreateDataset(containerUrl, session.fetch, publicTypeIndexUrl);\n\n        if (isComponentMounted) {\n          setArticlelist(list);\n        }\n      } catch (e) {\n        console.log(\"an error occurr\");\n        console.log(e);\n      }\n    };\n\n    fetchDataset();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [session]);\n\n  const addArticle = async (articleTitle, articleText) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const thingWithType = addStringNoLocale(createThing(), rdf.type, schema.TextDigitalDocument);\n    const thingWithTitle = addStringNoLocale(thingWithType, schema.headline, articleTitle);\n    const thingWithDate = addDatetime(thingWithTitle, schema.dateCreated, new Date());\n    const thingWithText = addStringNoLocale(thingWithDate, schema.text, articleText); //ELIMINARE LOG\n\n    console.log(\"provo a stampare cosa: \" + thingWithText);\n    const updatedArticlelist = setThing(articlelist, thingWithText);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const removeArticle = async thing => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const updatedArticlelist = removeThing(articlelist, thing);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const changeArticle = async (thing, text, headline) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const articleText = setStringNoLocale(thing, schema.text, text);\n    const articleHeadline = setStringNoLocale(articleText, schema.headline, headline);\n    const updatedArticlelist = setThing(articlelist, articleHeadline);\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(articlelistUrl, updatedArticlelist, {\n      fetch: session.fetch\n    });\n    setArticlelist(savedUpdatedArticlelist);\n  };\n\n  const articlesArray = articlelist ? getThingAll(articlelist) : [];\n  const myArticles = articlesArray.sort(byDate).map(currentValue => {\n    console.log(JSON.stringify(currentValue, null, \" \"));\n    const title = getStringNoLocale(currentValue, schema.headline);\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(Article, {\n        thing: currentValue,\n        remove: async thing => await removeArticle(thing),\n        change: async (thing, text, headline) => await changeArticle(thing, text, headline)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: eliminare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [\"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-half\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: myArticles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-one-quarter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"You can use TrustApp in order to undestand if the permissions are still valid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: \"This application is a part of a project.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WriteArticles, {\n      newArticle: (title, text) => addArticle(title, text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Articlelist, \"wE85eyWrrNBiIXXjHIweT6xtd6k=\", false, function () {\n  return [useSession];\n});\n\n_c = Articlelist;\nexport default Articlelist;\n\nfunction byDate(a, b) {\n  const aUpdateDate = getDatetime(a, schema.dateModified);\n  const bUpdateDate = getDatetime(b, schema.dateModified);\n  const aCreatedDate = getDatetime(a, schema.dateCreated);\n  const bCreatedDate = getDatetime(b, schema.dateCreated);\n  const aDate = aUpdateDate !== null && aUpdateDate !== void 0 ? aUpdateDate : aCreatedDate;\n  const bDate = bUpdateDate !== null && bUpdateDate !== void 0 ? bUpdateDate : bCreatedDate;\n\n  if (bDate === null) {\n    return -1;\n  }\n\n  if (aDate === null) {\n    return 1;\n  }\n\n  return bDate.getTime() - aDate.getTime();\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Articlelist\");","map":{"version":3,"sources":["/home/carlo/Desktop/Project/my-solid-blog-test/src/components/ArticlesList.js"],"names":["saveSolidDatasetAt","getSolidDataset","getSourceUrl","getBoolean","getDate","getDecimal","getInteger","getStringWithLocale","getUrl","getUrlAll","getTime","removeThing","getThing","getThingAll","setThing","createThing","addDatetime","addStringNoLocale","setStringNoLocale","getStringNoLocale","getDatetime","asUrl","useSession","React","useEffect","useState","getOrCreateDataset","WriteArticles","Article","schema","rdf","acl","solid","Articlelist","session","articlelist","setArticlelist","isComponentMounted","fetchDataset","myDataset","info","webId","fetch","profile","publicTypeIndexUrl","publicTypeIndex","podUrl","containerUrl","list","e","console","log","addArticle","articleTitle","articleText","articlelistUrl","thingWithType","type","TextDigitalDocument","thingWithTitle","headline","thingWithDate","dateCreated","Date","thingWithText","text","updatedArticlelist","savedUpdatedArticlelist","removeArticle","thing","changeArticle","articleHeadline","articlesArray","myArticles","sort","byDate","map","currentValue","JSON","stringify","title","eliminare","a","b","aUpdateDate","dateModified","bUpdateDate","aCreatedDate","bCreatedDate","aDate","bDate"],"mappings":"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","sourcesContent":["import { \n  saveSolidDatasetAt,\n  getSolidDataset,\n  getSourceUrl,\n  getBoolean,\n  getDate,\n  getDecimal,\n  getInteger,\n  getStringWithLocale,\n  getUrl,\n  getUrlAll,\n  getTime,\n  removeThing,\n  getThing,\n  getThingAll,\n  setThing,\n  createThing,\n  addDatetime,\n  addStringNoLocale,\n  setStringNoLocale,\n  getStringNoLocale,\n  getDatetime,\n  asUrl,\n} from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getOrCreateDataset } from \"../utils/GetOrCreateDataset.js\";\nimport WriteArticles from './WriteArticles.js';\nimport Article from './Article.js';\nimport { schema, rdf, acl, solid } from 'rdf-namespaces';\n//eliminate later\n\n\nfunction Articlelist() {\n  const { session } = useSession();\n  const [articlelist, setArticlelist] = useState();\n\n  useEffect(() => {\n    let isComponentMounted = true;\n    \n    const fetchDataset = async () => {\n      try {\n        const myDataset = await getSolidDataset(\n          session.info.webId,\n          {\n          fetch: session.fetch,\n          },\n        );\n        const profile = getThing(\n          myDataset,\n          session.info.webId,\n        );\n\n        const publicTypeIndexUrl = getUrl( profile, solid.publicTypeIndex );\n\n        const podUrl = getUrl(\n          profile,\n          \"http://www.w3.org/ns/pim/space#storage\",\n        );\n        const containerUrl = podUrl + \"public/my-solid-blog/\";\n        const list = await getOrCreateDataset(\n          containerUrl,\n          session.fetch,\n          publicTypeIndexUrl,\n        );\n        if (isComponentMounted) {\n          setArticlelist(list);\n        }\n      }\n      catch(e) {\n        console.log(\"an error occurr\");\n        console.log(e);\n      }\n    };\n    \n    fetchDataset();\n    \n    return () => {\n      isComponentMounted = false;\n    }\n  }, [session]);\n  \n\n  const addArticle = async (articleTitle, articleText) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n\n    const thingWithType = addStringNoLocale(\n      createThing(),\n      rdf.type,\n      schema.TextDigitalDocument,\n    );\n    const thingWithTitle = addStringNoLocale(\n      thingWithType,\n      schema.headline,\n      articleTitle,\n    );\n    const thingWithDate = addDatetime(\n      thingWithTitle,\n      schema.dateCreated,\n      new Date(),\n    );\n    const thingWithText = addStringNoLocale(\n      thingWithDate,\n      schema.text,\n      articleText,\n    );\n    //ELIMINARE LOG\n    console.log(\"provo a stampare cosa: \" +  thingWithText);\n    const updatedArticlelist = setThing(\n      articlelist,\n      thingWithText,\n    );\n    \n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  };\n  \n  const removeArticle = async (thing) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const updatedArticlelist = removeThing(\n      articlelist,\n      thing,\n    );\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  }\n  \n  const changeArticle = async (thing, text, headline) => {\n    const articlelistUrl = getSourceUrl(articlelist);\n    const articleText = setStringNoLocale(\n      thing,\n      schema.text,\n      text,\n    );\n    const articleHeadline = setStringNoLocale(\n      articleText,\n      schema.headline,\n      headline,\n    );\n\n    const updatedArticlelist = setThing(\n      articlelist,\n      articleHeadline,\n    );\n    const savedUpdatedArticlelist = await saveSolidDatasetAt(\n      articlelistUrl,\n      updatedArticlelist,\n      {fetch: session.fetch},\n    );\n    setArticlelist(savedUpdatedArticlelist);\n  };\n  \n  const articlesArray = articlelist ? getThingAll(articlelist) : [];  \n  const myArticles = articlesArray.sort(byDate).map((currentValue) => {\n    console.log(JSON.stringify(currentValue, null, \" \"));\n    const title = getStringNoLocale(\n      currentValue,\n      schema.headline,\n    );\n    \n    return(\n      <li key={title} className=\"columns\">\n        <Article\n          thing={currentValue}\n          remove={async (thing) => await removeArticle(thing)}\n          change={async (thing, text, headline) => await changeArticle(thing, text, headline)}\n        />\n      </li>\n    );\n  });\n  \n  return(\n    <>\n      <br/>\n      {/*eliminare div successivo*/}\n      <div>\n        {eliminare}\n      </div>\n      <div className=\"columns\">\n        &nbsp;&nbsp;&nbsp;&nbsp;\n        <div className=\"column is-half\">\n        <ul>{myArticles}</ul>\n        </div>\n        <div className=\"column is-one-quarter\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"content\">\n                You can use TrustApp in order to undestand if the permissions are still valid.\n              </div>\n              <br/>\n              <div className=\"content\">\n                This application is a part of a project.\n              </div>\n              <br/>\n            </div>\n          </div>\n        </div>\n      </div>\n      <br/>\n      <br/>\n      <WriteArticles\n        newArticle={(title, text) => addArticle(title, text)}\n      />\n    </>\n  );\n}\n\nexport default Articlelist;\n\n\nfunction byDate(a, b) {\n  const aUpdateDate = getDatetime(a, schema.dateModified);\n  const bUpdateDate = getDatetime(b, schema.dateModified);\n    \n  const aCreatedDate = getDatetime(a, schema.dateCreated);\n  const bCreatedDate = getDatetime(b, schema.dateCreated);\n  \n  const aDate = aUpdateDate ?? aCreatedDate;\n  const bDate = bUpdateDate ?? bCreatedDate;\n  \n  if (bDate === null) {\n    return -1;\n  }\n  \n  if (aDate === null) {\n    return 1;\n  }\n  \n  return bDate.getTime() - aDate.getTime();\n}"]},"metadata":{},"sourceType":"module"}