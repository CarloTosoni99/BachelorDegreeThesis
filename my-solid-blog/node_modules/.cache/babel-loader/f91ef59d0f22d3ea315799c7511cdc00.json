{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst solid_client_authn_core_1 = require(\"@inrupt/solid-client-authn-core\");\n\nfunction hasIssuer(options) {\n  return typeof options.oidcIssuer === \"string\";\n}\n\nfunction hasRedirectUrl(options) {\n  return typeof options.redirectUrl === \"string\";\n}\n\nclass OidcLoginHandler {\n  constructor(storageUtility, oidcHandler, issuerConfigFetcher, clientRegistrar) {\n    this.storageUtility = storageUtility;\n    this.oidcHandler = oidcHandler;\n    this.issuerConfigFetcher = issuerConfigFetcher;\n    this.clientRegistrar = clientRegistrar;\n  }\n\n  async canHandle(options) {\n    return hasIssuer(options) && hasRedirectUrl(options);\n  }\n\n  async handle(options) {\n    if (!hasIssuer(options)) {\n      throw new solid_client_authn_core_1.ConfigurationError(`OidcLoginHandler requires an OIDC issuer: missing property 'oidcIssuer' in ${JSON.stringify(options)}`);\n    }\n\n    if (!hasRedirectUrl(options)) {\n      throw new solid_client_authn_core_1.ConfigurationError(`OidcLoginHandler requires a redirect URL: missing property 'redirectUrl' in ${JSON.stringify(options)}`);\n    }\n\n    const issuerConfig = await this.issuerConfigFetcher.fetchConfig(options.oidcIssuer);\n    const clientRegistration = await solid_client_authn_core_1.handleRegistration(options, issuerConfig, this.storageUtility, this.clientRegistrar);\n    const OidcOptions = {\n      issuer: issuerConfig.issuer,\n      dpop: options.tokenType.toLowerCase() === \"dpop\",\n      ...options,\n      issuerConfiguration: issuerConfig,\n      client: clientRegistration\n    };\n    return this.oidcHandler.handle(OidcOptions);\n  }\n\n}\n\nexports.default = OidcLoginHandler;","map":{"version":3,"sources":["../../../src/login/oidc/OidcLoginHandler.ts"],"names":[],"mappings":";;;;;;AA8BA,MAAA,yBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AAcA,SAAS,SAAT,CACE,OADF,EACwB;AAEtB,SAAO,OAAO,OAAO,CAAC,UAAf,KAA8B,QAArC;AACD;;AAED,SAAS,cAAT,CACE,OADF,EACwB;AAEtB,SAAO,OAAO,OAAO,CAAC,WAAf,KAA+B,QAAtC;AACD;;AAKD,MAAqB,gBAArB,CAAqC;AACnC,EAAA,WAAA,CACU,cADV,EAEU,WAFV,EAGU,mBAHV,EAIU,eAJV,EAI2C;AAHjC,SAAA,cAAA,GAAA,cAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,mBAAA,GAAA,mBAAA;AACA,SAAA,eAAA,GAAA,eAAA;AACN;;AAEW,QAAT,SAAS,CAAC,OAAD,EAAuB;AACpC,WAAO,SAAS,CAAC,OAAD,CAAT,IAAsB,cAAc,CAAC,OAAD,CAA3C;AACD;;AAEW,QAAN,MAAM,CAAC,OAAD,EAAuB;AACjC,QAAI,CAAC,SAAS,CAAC,OAAD,CAAd,EAAyB;AACvB,YAAM,IAAI,yBAAA,CAAA,kBAAJ,CACJ,8EAA8E,IAAI,CAAC,SAAL,CAC5E,OAD4E,CAE7E,EAHG,CAAN;AAKD;;AACD,QAAI,CAAC,cAAc,CAAC,OAAD,CAAnB,EAA8B;AAC5B,YAAM,IAAI,yBAAA,CAAA,kBAAJ,CACJ,+EAA+E,IAAI,CAAC,SAAL,CAC7E,OAD6E,CAE9E,EAHG,CAAN;AAKD;;AAGD,UAAM,YAAY,GAChB,MAAM,KAAK,mBAAL,CAAyB,WAAzB,CAAqC,OAAO,CAAC,UAA7C,CADR;AAGA,UAAM,kBAAkB,GAAG,MAAM,yBAAA,CAAA,kBAAA,CAC/B,OAD+B,EAE/B,YAF+B,EAG/B,KAAK,cAH0B,EAI/B,KAAK,eAJ0B,CAAjC;AAQA,UAAM,WAAW,GAAiB;AAMhC,MAAA,MAAM,EAAE,YAAY,CAAC,MANW;AAQhC,MAAA,IAAI,EAAE,OAAO,CAAC,SAAR,CAAkB,WAAlB,OAAoC,MARV;AAShC,SAAG,OAT6B;AAUhC,MAAA,mBAAmB,EAAE,YAVW;AAWhC,MAAA,MAAM,EAAE;AAXwB,KAAlC;AAeA,WAAO,KAAK,WAAL,CAAiB,MAAjB,CAAwB,WAAxB,CAAP;AACD;;AAxDkC;;AAArC,OAAA,CAAA,OAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst solid_client_authn_core_1 = require(\"@inrupt/solid-client-authn-core\");\nfunction hasIssuer(options) {\n    return typeof options.oidcIssuer === \"string\";\n}\nfunction hasRedirectUrl(options) {\n    return typeof options.redirectUrl === \"string\";\n}\nclass OidcLoginHandler {\n    constructor(storageUtility, oidcHandler, issuerConfigFetcher, clientRegistrar) {\n        this.storageUtility = storageUtility;\n        this.oidcHandler = oidcHandler;\n        this.issuerConfigFetcher = issuerConfigFetcher;\n        this.clientRegistrar = clientRegistrar;\n    }\n    async canHandle(options) {\n        return hasIssuer(options) && hasRedirectUrl(options);\n    }\n    async handle(options) {\n        if (!hasIssuer(options)) {\n            throw new solid_client_authn_core_1.ConfigurationError(`OidcLoginHandler requires an OIDC issuer: missing property 'oidcIssuer' in ${JSON.stringify(options)}`);\n        }\n        if (!hasRedirectUrl(options)) {\n            throw new solid_client_authn_core_1.ConfigurationError(`OidcLoginHandler requires a redirect URL: missing property 'redirectUrl' in ${JSON.stringify(options)}`);\n        }\n        const issuerConfig = await this.issuerConfigFetcher.fetchConfig(options.oidcIssuer);\n        const clientRegistration = await solid_client_authn_core_1.handleRegistration(options, issuerConfig, this.storageUtility, this.clientRegistrar);\n        const OidcOptions = {\n            issuer: issuerConfig.issuer,\n            dpop: options.tokenType.toLowerCase() === \"dpop\",\n            ...options,\n            issuerConfiguration: issuerConfig,\n            client: clientRegistration,\n        };\n        return this.oidcHandler.handle(OidcOptions);\n    }\n}\nexports.default = OidcLoginHandler;\n//# sourceMappingURL=OidcLoginHandler.js.map"]},"metadata":{},"sourceType":"script"}