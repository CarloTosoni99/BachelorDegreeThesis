{"ast":null,"code":"/**\r\n * description\r\n *\r\n * The description, definition,\r\n *         or abstract. Information explaining what this is.\r\n *         Not arbitrary comment about anything, only about the subject.\r\n *         (Use this property for anything. There is no domain restriction.).\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#description\r\n */\nvar description = 'http://www.w3.org/2005/01/wf/flow#description';\n/**\r\n * how\r\n *\r\n * Another task upon which this depends, in the sense that\r\n *         this task cannot be completed without that task being done.\r\n *         You can't use this for dependencies on anything other than other tasks.\r\n *         (Note the US spelling of the URI. In the UK, a dependant is a something\r\n *         which is dependent on somehing else.)\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#dependent\r\n */\n\nvar dependent = 'http://www.w3.org/2005/01/wf/flow#dependent';\n/**\r\n * assigned to\r\n *\r\n * The person or group to whom this has been assigned.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#assignee\r\n */\n\nvar assignee = 'http://www.w3.org/2005/01/wf/flow#assignee';\n/**\r\n * changed by\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#modifiedBy\r\n */\n\nvar modifiedBy = 'http://www.w3.org/2005/01/wf/flow#modifiedBy';\n/**\r\n * subscriber\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#subscriber\r\n */\n\nvar subscriber = 'http://www.w3.org/2005/01/wf/flow#subscriber';\n/**\r\n * deliverable\r\n *\r\n * Something which must be delivered to accomplish this\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#deliverable\r\n */\n\nvar deliverable = 'http://www.w3.org/2005/01/wf/flow#deliverable';\n/**\r\n * goals\r\n *\r\n * A textual description of the goals of this product, etc.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#goalDescription\r\n */\n\nvar goalDescription = 'http://www.w3.org/2005/01/wf/flow#goalDescription';\n/**\r\n * success criteria\r\n *\r\n * A textual description of the successs critera.\r\n *                 How when we know this is done?\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#successCriteria\r\n */\n\nvar successCriteria = 'http://www.w3.org/2005/01/wf/flow#successCriteria';\n/**\r\n * due\r\n *\r\n * The date this task is due.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#dateDue\r\n */\n\nvar dateDue = 'http://www.w3.org/2005/01/wf/flow#dateDue';\n/**\r\n * attachment\r\n *\r\n * Something related is attached for information.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#attachment\r\n */\n\nvar attachment = 'http://www.w3.org/2005/01/wf/flow#attachment';\n/**\r\n * screen shot\r\n *\r\n * An image taken by capturing the state of a\r\n *                  computer screen, for example to demonstrate a problem\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#screenShot\r\n */\n\nvar screenShot = 'http://www.w3.org/2005/01/wf/flow#screenShot';\n/**\r\n * test data\r\n *\r\n * A file which can be used as inpiut to a test\r\n *                 or to demonstrate a problem.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#testData\r\n */\n\nvar testData = 'http://www.w3.org/2005/01/wf/flow#testData';\n/**\r\n * terminal output\r\n *\r\n * A file showing user interaction from a\r\n *                 text terminal or console etc.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#terminalOutput\r\n */\n\nvar terminalOutput = 'http://www.w3.org/2005/01/wf/flow#terminalOutput';\n/**\r\n * message\r\n *\r\n * A message about this. Attached for information.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#message\r\n */\n\nvar message = 'http://www.w3.org/2005/01/wf/flow#message';\n/**\r\n * to\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#recipent\r\n */\n\nvar recipent = 'http://www.w3.org/2005/01/wf/flow#recipent';\n/**\r\n * from\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#sender\r\n */\n\nvar sender = 'http://www.w3.org/2005/01/wf/flow#sender';\n/**\r\n * tracker\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#tracker\r\n */\n\nvar tracker = 'http://www.w3.org/2005/01/wf/flow#tracker';\n/**\r\n * all issues must be in\r\n *\r\n * The class of issues which are allowed in this tracker.\r\n *                 This is essemtial to the operation of the tracker,\r\n *                 as it defines which states an issue can be in.\r\n *                 (The issueClass must be a disjointUnionOf the state classes)\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#issueClass\r\n */\n\nvar issueClass = 'http://www.w3.org/2005/01/wf/flow#issueClass';\n/**\r\n * issue category\r\n *\r\n * Issues may be categorized according to the\r\n *                 subclasses of this class\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#issueCategory\r\n */\n\nvar issueCategory = 'http://www.w3.org/2005/01/wf/flow#issueCategory';\n/**\r\n * state store\r\n *\r\n * A read-write document.\r\n *                 The state of the issues is modified here.\r\n *                 When you set up a trcaker, thgis must be set to point\r\n *                 to a writeble data resource on the web.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#stateStore\r\n */\n\nvar stateStore = 'http://www.w3.org/2005/01/wf/flow#stateStore';\n/**\r\n * transaction store\r\n *\r\n * An appendable document. Transactions and messsages\r\n *                     can be written into here\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#transactionStore\r\n */\n\nvar transactionStore = 'http://www.w3.org/2005/01/wf/flow#transactionStore';\n/**\r\n * assignees must be\r\n *\r\n * When an issue is assigned, the assignee must be from this class\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#asigneeClass\r\n */\n\nvar asigneeClass = 'http://www.w3.org/2005/01/wf/flow#asigneeClass';\n/**\r\n * initial state\r\n *\r\n * The initial state for a new issue\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#initialState\r\n */\n\nvar initialState = 'http://www.w3.org/2005/01/wf/flow#initialState';\n/**\r\n * to\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#final\r\n */\n\nvar final = 'http://www.w3.org/2005/01/wf/flow#final';\n/**\r\n * task\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#task\r\n */\n\nvar task = 'http://www.w3.org/2005/01/wf/flow#task';\n/**\r\n * requires\r\n *\r\n * To be a valid transition,\r\n * \t\ta necessary (but not necessarily sufficuent) condition\r\n * \t\tis that there be recorded these properties for the record\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#requires\r\n */\n\nvar requires = 'http://www.w3.org/2005/01/wf/flow#requires';\n/**\r\n * affects\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#affects\r\n */\n\nvar affects = 'http://www.w3.org/2005/01/wf/flow#affects';\n/**\r\n * creates\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#creates\r\n */\n\nvar creates = 'http://www.w3.org/2005/01/wf/flow#creates';\n/**\r\n * allowed transitions\r\n *\r\n * The state machine is defined\r\n * \tby these lists of transition allowed for each issue.\r\n * \t(An interesting option in the Web is to make an allowed transition\r\n * \tto a state in soemone else's ontology, which in turn allows\r\n * \ttransitions into many ontologies.  So a finite state maxchine\r\n * \tmay become very large. In practice this means that a task handed\r\n * \toff to another organization may be processed on all kinds of ways.)\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#allowedTransitions\r\n */\n\nvar allowedTransitions = 'http://www.w3.org/2005/01/wf/flow#allowedTransitions';\n/**\r\n * issue\r\n *\r\n * A transition changes the state of the given issue.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#issue\r\n */\n\nvar issue = 'http://www.w3.org/2005/01/wf/flow#issue';\n/**\r\n * source\r\n *\r\n * The source of a transition is\r\n * \t\t\t\tthe document by which it happened\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#source\r\n */\n\nvar source = 'http://www.w3.org/2005/01/wf/flow#source';\n/**\r\n * task\r\n *\r\n * Something to be done in a wide sense,\r\n * \tan agenda item at a meeting is one example, but any\r\n * \tissue, task, action item, goal, product, deliverable, milestone, can such a thing.\r\n * \tThe requirement for this framework was that it would allow\r\n * \tone to customize ontologies for things such as agenda items,\r\n * \taction items, working group issues with a spec, w3c Last Call issues,\r\n * \tsoftware bugs and administrative requests.\r\n * \tIn Ï€-calculus, a process.\r\n * \tMake your type of issue a subclass of Task.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Task\r\n */\n\nvar Task = 'http://www.w3.org/2005/01/wf/flow#Task';\n/**\r\n * open\r\n *\r\n * A task which needs attention. The very crude states of Open and Closed all\r\n *         interoperability between different systems if the states for a given\r\n *         application are made subclasses of either Open or Closed. This allows\r\n *         tasks from different systems to be mixed and treated together with\r\n *         limited but valuable functionality.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Open\r\n */\n\nvar Open = 'http://www.w3.org/2005/01/wf/flow#Open';\n/**\r\n * closed\r\n *\r\n * A task which does not need attention. It may be closed because\r\n *         has been abandoned or completed, for example.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Closed\r\n */\n\nvar Closed = 'http://www.w3.org/2005/01/wf/flow#Closed';\n/**\r\n * action item\r\n *\r\n * An obligation taken on by a person, typically at a meeting.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#ActionItem\r\n */\n\nvar ActionItem = 'http://www.w3.org/2005/01/wf/flow#ActionItem';\n/**\r\n * product\r\n *\r\n * A product is a task which monitors something\r\n *                 which must be produced.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Product\r\n */\n\nvar Product = 'http://www.w3.org/2005/01/wf/flow#Product';\n/**\r\n * message\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Message\r\n */\n\nvar Message = 'http://www.w3.org/2005/01/wf/flow#Message';\n/**\r\n * tracker\r\n *\r\n * A set of issues and\r\n *                 the constraints on how they evolve.\r\n *                 To use this ontology, craete a new tracker.\r\n *                 Copy an existing one or make up your own.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Tracker\r\n */\n\nvar Tracker = 'http://www.w3.org/2005/01/wf/flow#Tracker';\n/**\r\n * change\r\n *\r\n * The universal class of things which\r\n * change the state of a task.\r\n * Included now: Creation, Transition. (Maybe in the future\r\n * more Ï€-calculus constructions such as splitting & merging tasks,\r\n * and import/export of obligations to a foreign opaque system.)\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Change\r\n */\n\nvar Change = 'http://www.w3.org/2005/01/wf/flow#Change';\n/**\r\n * transition\r\n *\r\n * A transition is a change of state of\r\n * a task. Typical properties include date and/or source\r\n * (a document causing the transition), and a final state.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Transition\r\n */\n\nvar Transition = 'http://www.w3.org/2005/01/wf/flow#Transition';\n/**\r\n * creation\r\n *\r\n * A creation is a change from existence\r\n * to non-existence\r\n * a task. Typical properties include date and/or source\r\n * (a document causing the transition), and a final state.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Creation\r\n */\n\nvar Creation = 'http://www.w3.org/2005/01/wf/flow#Creation';\n/**\r\n * terminal state\r\n *\r\n * A state from which there are no transitions.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#TerminalState\r\n */\n\nvar TerminalState = 'http://www.w3.org/2005/01/wf/flow#TerminalState';\n/**\r\n * non-terminal state\r\n *\r\n * A state from which there are transitions.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#NonTerminalState\r\n */\n\nvar NonTerminalState = 'http://www.w3.org/2005/01/wf/flow#NonTerminalState';\nvar wfImport = /*#__PURE__*/Object.freeze({\n  description: description,\n  dependent: dependent,\n  assignee: assignee,\n  modifiedBy: modifiedBy,\n  subscriber: subscriber,\n  deliverable: deliverable,\n  goalDescription: goalDescription,\n  successCriteria: successCriteria,\n  dateDue: dateDue,\n  attachment: attachment,\n  screenShot: screenShot,\n  testData: testData,\n  terminalOutput: terminalOutput,\n  message: message,\n  recipent: recipent,\n  sender: sender,\n  tracker: tracker,\n  issueClass: issueClass,\n  issueCategory: issueCategory,\n  stateStore: stateStore,\n  transactionStore: transactionStore,\n  asigneeClass: asigneeClass,\n  initialState: initialState,\n  final: final,\n  task: task,\n  requires: requires,\n  affects: affects,\n  creates: creates,\n  allowedTransitions: allowedTransitions,\n  issue: issue,\n  source: source,\n  Task: Task,\n  Open: Open,\n  Closed: Closed,\n  ActionItem: ActionItem,\n  Product: Product,\n  Message: Message,\n  Tracker: Tracker,\n  Change: Change,\n  Transition: Transition,\n  Creation: Creation,\n  TerminalState: TerminalState,\n  NonTerminalState: NonTerminalState\n});\nexport { affects as A, creates as B, allowedTransitions as C, issue as D, source as E, Closed as F, ActionItem as G, Tracker as H, Change as I, Transition as J, Creation as K, TerminalState as L, Message as M, NonTerminalState as N, Open as O, Product as P, wfImport as Q, Task as T, dependent as a, assignee as b, deliverable as c, description as d, successCriteria as e, dateDue as f, goalDescription as g, attachment as h, screenShot as i, terminalOutput as j, message as k, sender as l, modifiedBy as m, tracker as n, issueClass as o, issueCategory as p, stateStore as q, recipent as r, subscriber as s, testData as t, transactionStore as u, asigneeClass as v, initialState as w, final as x, task as y, requires as z };","map":{"version":3,"sources":["/home/carlo/Desktop/Thesis/my-solid-blog/node_modules/rdf-namespaces/dist/wf-b0c00d3a.js"],"names":["description","dependent","assignee","modifiedBy","subscriber","deliverable","goalDescription","successCriteria","dateDue","attachment","screenShot","testData","terminalOutput","message","recipent","sender","tracker","issueClass","issueCategory","stateStore","transactionStore","asigneeClass","initialState","final","task","requires","affects","creates","allowedTransitions","issue","source","Task","Open","Closed","ActionItem","Product","Message","Tracker","Change","Transition","Creation","TerminalState","NonTerminalState","wfImport","Object","freeze","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","T","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,WAAW,GAAG,+CAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS,GAAG,6CAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,4CAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,8CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,8CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAG,+CAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG,mDAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG,mDAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,2CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,8CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,8CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,4CAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,kDAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,2CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,4CAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAG,0CAAb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,2CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,8CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAG,iDAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,8CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAG,oDAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAG,gDAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAG,gDAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,KAAK,GAAG,yCAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI,GAAG,wCAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,4CAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,2CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,2CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB,GAAG,sDAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,KAAK,GAAG,yCAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAG,0CAAb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI,GAAG,wCAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI,GAAG,wCAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAG,0CAAb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,8CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,2CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,2CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,2CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAG,0CAAb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,8CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,4CAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAG,iDAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAG,oDAAvB;AAEA,IAAIC,QAAQ,GAAG,aAAaC,MAAM,CAACC,MAAP,CAAc;AACzC7C,EAAAA,WAAW,EAAEA,WAD4B;AAEzCC,EAAAA,SAAS,EAAEA,SAF8B;AAGzCC,EAAAA,QAAQ,EAAEA,QAH+B;AAIzCC,EAAAA,UAAU,EAAEA,UAJ6B;AAKzCC,EAAAA,UAAU,EAAEA,UAL6B;AAMzCC,EAAAA,WAAW,EAAEA,WAN4B;AAOzCC,EAAAA,eAAe,EAAEA,eAPwB;AAQzCC,EAAAA,eAAe,EAAEA,eARwB;AASzCC,EAAAA,OAAO,EAAEA,OATgC;AAUzCC,EAAAA,UAAU,EAAEA,UAV6B;AAWzCC,EAAAA,UAAU,EAAEA,UAX6B;AAYzCC,EAAAA,QAAQ,EAAEA,QAZ+B;AAazCC,EAAAA,cAAc,EAAEA,cAbyB;AAczCC,EAAAA,OAAO,EAAEA,OAdgC;AAezCC,EAAAA,QAAQ,EAAEA,QAf+B;AAgBzCC,EAAAA,MAAM,EAAEA,MAhBiC;AAiBzCC,EAAAA,OAAO,EAAEA,OAjBgC;AAkBzCC,EAAAA,UAAU,EAAEA,UAlB6B;AAmBzCC,EAAAA,aAAa,EAAEA,aAnB0B;AAoBzCC,EAAAA,UAAU,EAAEA,UApB6B;AAqBzCC,EAAAA,gBAAgB,EAAEA,gBArBuB;AAsBzCC,EAAAA,YAAY,EAAEA,YAtB2B;AAuBzCC,EAAAA,YAAY,EAAEA,YAvB2B;AAwBzCC,EAAAA,KAAK,EAAEA,KAxBkC;AAyBzCC,EAAAA,IAAI,EAAEA,IAzBmC;AA0BzCC,EAAAA,QAAQ,EAAEA,QA1B+B;AA2BzCC,EAAAA,OAAO,EAAEA,OA3BgC;AA4BzCC,EAAAA,OAAO,EAAEA,OA5BgC;AA6BzCC,EAAAA,kBAAkB,EAAEA,kBA7BqB;AA8BzCC,EAAAA,KAAK,EAAEA,KA9BkC;AA+BzCC,EAAAA,MAAM,EAAEA,MA/BiC;AAgCzCC,EAAAA,IAAI,EAAEA,IAhCmC;AAiCzCC,EAAAA,IAAI,EAAEA,IAjCmC;AAkCzCC,EAAAA,MAAM,EAAEA,MAlCiC;AAmCzCC,EAAAA,UAAU,EAAEA,UAnC6B;AAoCzCC,EAAAA,OAAO,EAAEA,OApCgC;AAqCzCC,EAAAA,OAAO,EAAEA,OArCgC;AAsCzCC,EAAAA,OAAO,EAAEA,OAtCgC;AAuCzCC,EAAAA,MAAM,EAAEA,MAvCiC;AAwCzCC,EAAAA,UAAU,EAAEA,UAxC6B;AAyCzCC,EAAAA,QAAQ,EAAEA,QAzC+B;AA0CzCC,EAAAA,aAAa,EAAEA,aA1C0B;AA2CzCC,EAAAA,gBAAgB,EAAEA;AA3CuB,CAAd,CAA5B;AA8CA,SAAShB,OAAO,IAAIoB,CAApB,EAAuBnB,OAAO,IAAIoB,CAAlC,EAAqCnB,kBAAkB,IAAIoB,CAA3D,EAA8DnB,KAAK,IAAIoB,CAAvE,EAA0EnB,MAAM,IAAIoB,CAApF,EAAuFjB,MAAM,IAAIkB,CAAjG,EAAoGjB,UAAU,IAAIkB,CAAlH,EAAqHf,OAAO,IAAIgB,CAAhI,EAAmIf,MAAM,IAAIgB,CAA7I,EAAgJf,UAAU,IAAIgB,CAA9J,EAAiKf,QAAQ,IAAIgB,CAA7K,EAAgLf,aAAa,IAAIgB,CAAjM,EAAoMrB,OAAO,IAAIsB,CAA/M,EAAkNhB,gBAAgB,IAAIiB,CAAtO,EAAyO3B,IAAI,IAAI4B,CAAjP,EAAoPzB,OAAO,IAAI0B,CAA/P,EAAkQlB,QAAQ,IAAImB,CAA9Q,EAAiR/B,IAAI,IAAIgC,CAAzR,EAA4R9D,SAAS,IAAI+D,CAAzS,EAA4S9D,QAAQ,IAAI+D,CAAxT,EAA2T5D,WAAW,IAAI6D,CAA1U,EAA6UlE,WAAW,IAAImE,CAA5V,EAA+V5D,eAAe,IAAI6D,CAAlX,EAAqX5D,OAAO,IAAI6D,CAAhY,EAAmY/D,eAAe,IAAIgE,CAAtZ,EAAyZ7D,UAAU,IAAI8D,CAAva,EAA0a7D,UAAU,IAAI8D,CAAxb,EAA2b5D,cAAc,IAAI6D,CAA7c,EAAgd5D,OAAO,IAAI6D,CAA3d,EAA8d3D,MAAM,IAAI4D,CAAxe,EAA2exE,UAAU,IAAIyE,CAAzf,EAA4f5D,OAAO,IAAI6D,CAAvgB,EAA0gB5D,UAAU,IAAI6D,CAAxhB,EAA2hB5D,aAAa,IAAI6D,CAA5iB,EAA+iB5D,UAAU,IAAI6D,CAA7jB,EAAgkBlE,QAAQ,IAAImE,CAA5kB,EAA+kB7E,UAAU,IAAI8E,CAA7lB,EAAgmBvE,QAAQ,IAAIwE,CAA5mB,EAA+mB/D,gBAAgB,IAAIgE,CAAnoB,EAAsoB/D,YAAY,IAAIgE,CAAtpB,EAAypB/D,YAAY,IAAIgE,CAAzqB,EAA4qB/D,KAAK,IAAIgE,CAArrB,EAAwrB/D,IAAI,IAAIgE,CAAhsB,EAAmsB/D,QAAQ,IAAIgE,CAA/sB","sourcesContent":["/**\r\n * description\r\n *\r\n * The description, definition,\r\n *         or abstract. Information explaining what this is.\r\n *         Not arbitrary comment about anything, only about the subject.\r\n *         (Use this property for anything. There is no domain restriction.).\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#description\r\n */\r\nvar description = 'http://www.w3.org/2005/01/wf/flow#description';\r\n/**\r\n * how\r\n *\r\n * Another task upon which this depends, in the sense that\r\n *         this task cannot be completed without that task being done.\r\n *         You can't use this for dependencies on anything other than other tasks.\r\n *         (Note the US spelling of the URI. In the UK, a dependant is a something\r\n *         which is dependent on somehing else.)\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#dependent\r\n */\r\nvar dependent = 'http://www.w3.org/2005/01/wf/flow#dependent';\r\n/**\r\n * assigned to\r\n *\r\n * The person or group to whom this has been assigned.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#assignee\r\n */\r\nvar assignee = 'http://www.w3.org/2005/01/wf/flow#assignee';\r\n/**\r\n * changed by\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#modifiedBy\r\n */\r\nvar modifiedBy = 'http://www.w3.org/2005/01/wf/flow#modifiedBy';\r\n/**\r\n * subscriber\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#subscriber\r\n */\r\nvar subscriber = 'http://www.w3.org/2005/01/wf/flow#subscriber';\r\n/**\r\n * deliverable\r\n *\r\n * Something which must be delivered to accomplish this\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#deliverable\r\n */\r\nvar deliverable = 'http://www.w3.org/2005/01/wf/flow#deliverable';\r\n/**\r\n * goals\r\n *\r\n * A textual description of the goals of this product, etc.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#goalDescription\r\n */\r\nvar goalDescription = 'http://www.w3.org/2005/01/wf/flow#goalDescription';\r\n/**\r\n * success criteria\r\n *\r\n * A textual description of the successs critera.\r\n *                 How when we know this is done?\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#successCriteria\r\n */\r\nvar successCriteria = 'http://www.w3.org/2005/01/wf/flow#successCriteria';\r\n/**\r\n * due\r\n *\r\n * The date this task is due.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#dateDue\r\n */\r\nvar dateDue = 'http://www.w3.org/2005/01/wf/flow#dateDue';\r\n/**\r\n * attachment\r\n *\r\n * Something related is attached for information.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#attachment\r\n */\r\nvar attachment = 'http://www.w3.org/2005/01/wf/flow#attachment';\r\n/**\r\n * screen shot\r\n *\r\n * An image taken by capturing the state of a\r\n *                  computer screen, for example to demonstrate a problem\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#screenShot\r\n */\r\nvar screenShot = 'http://www.w3.org/2005/01/wf/flow#screenShot';\r\n/**\r\n * test data\r\n *\r\n * A file which can be used as inpiut to a test\r\n *                 or to demonstrate a problem.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#testData\r\n */\r\nvar testData = 'http://www.w3.org/2005/01/wf/flow#testData';\r\n/**\r\n * terminal output\r\n *\r\n * A file showing user interaction from a\r\n *                 text terminal or console etc.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#terminalOutput\r\n */\r\nvar terminalOutput = 'http://www.w3.org/2005/01/wf/flow#terminalOutput';\r\n/**\r\n * message\r\n *\r\n * A message about this. Attached for information.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#message\r\n */\r\nvar message = 'http://www.w3.org/2005/01/wf/flow#message';\r\n/**\r\n * to\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#recipent\r\n */\r\nvar recipent = 'http://www.w3.org/2005/01/wf/flow#recipent';\r\n/**\r\n * from\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#sender\r\n */\r\nvar sender = 'http://www.w3.org/2005/01/wf/flow#sender';\r\n/**\r\n * tracker\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#tracker\r\n */\r\nvar tracker = 'http://www.w3.org/2005/01/wf/flow#tracker';\r\n/**\r\n * all issues must be in\r\n *\r\n * The class of issues which are allowed in this tracker.\r\n *                 This is essemtial to the operation of the tracker,\r\n *                 as it defines which states an issue can be in.\r\n *                 (The issueClass must be a disjointUnionOf the state classes)\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#issueClass\r\n */\r\nvar issueClass = 'http://www.w3.org/2005/01/wf/flow#issueClass';\r\n/**\r\n * issue category\r\n *\r\n * Issues may be categorized according to the\r\n *                 subclasses of this class\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#issueCategory\r\n */\r\nvar issueCategory = 'http://www.w3.org/2005/01/wf/flow#issueCategory';\r\n/**\r\n * state store\r\n *\r\n * A read-write document.\r\n *                 The state of the issues is modified here.\r\n *                 When you set up a trcaker, thgis must be set to point\r\n *                 to a writeble data resource on the web.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#stateStore\r\n */\r\nvar stateStore = 'http://www.w3.org/2005/01/wf/flow#stateStore';\r\n/**\r\n * transaction store\r\n *\r\n * An appendable document. Transactions and messsages\r\n *                     can be written into here\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#transactionStore\r\n */\r\nvar transactionStore = 'http://www.w3.org/2005/01/wf/flow#transactionStore';\r\n/**\r\n * assignees must be\r\n *\r\n * When an issue is assigned, the assignee must be from this class\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#asigneeClass\r\n */\r\nvar asigneeClass = 'http://www.w3.org/2005/01/wf/flow#asigneeClass';\r\n/**\r\n * initial state\r\n *\r\n * The initial state for a new issue\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#initialState\r\n */\r\nvar initialState = 'http://www.w3.org/2005/01/wf/flow#initialState';\r\n/**\r\n * to\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#final\r\n */\r\nvar final = 'http://www.w3.org/2005/01/wf/flow#final';\r\n/**\r\n * task\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#task\r\n */\r\nvar task = 'http://www.w3.org/2005/01/wf/flow#task';\r\n/**\r\n * requires\r\n *\r\n * To be a valid transition,\r\n * \t\ta necessary (but not necessarily sufficuent) condition\r\n * \t\tis that there be recorded these properties for the record\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#requires\r\n */\r\nvar requires = 'http://www.w3.org/2005/01/wf/flow#requires';\r\n/**\r\n * affects\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#affects\r\n */\r\nvar affects = 'http://www.w3.org/2005/01/wf/flow#affects';\r\n/**\r\n * creates\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#creates\r\n */\r\nvar creates = 'http://www.w3.org/2005/01/wf/flow#creates';\r\n/**\r\n * allowed transitions\r\n *\r\n * The state machine is defined\r\n * \tby these lists of transition allowed for each issue.\r\n * \t(An interesting option in the Web is to make an allowed transition\r\n * \tto a state in soemone else's ontology, which in turn allows\r\n * \ttransitions into many ontologies.  So a finite state maxchine\r\n * \tmay become very large. In practice this means that a task handed\r\n * \toff to another organization may be processed on all kinds of ways.)\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#allowedTransitions\r\n */\r\nvar allowedTransitions = 'http://www.w3.org/2005/01/wf/flow#allowedTransitions';\r\n/**\r\n * issue\r\n *\r\n * A transition changes the state of the given issue.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#issue\r\n */\r\nvar issue = 'http://www.w3.org/2005/01/wf/flow#issue';\r\n/**\r\n * source\r\n *\r\n * The source of a transition is\r\n * \t\t\t\tthe document by which it happened\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#source\r\n */\r\nvar source = 'http://www.w3.org/2005/01/wf/flow#source';\r\n/**\r\n * task\r\n *\r\n * Something to be done in a wide sense,\r\n * \tan agenda item at a meeting is one example, but any\r\n * \tissue, task, action item, goal, product, deliverable, milestone, can such a thing.\r\n * \tThe requirement for this framework was that it would allow\r\n * \tone to customize ontologies for things such as agenda items,\r\n * \taction items, working group issues with a spec, w3c Last Call issues,\r\n * \tsoftware bugs and administrative requests.\r\n * \tIn Ï€-calculus, a process.\r\n * \tMake your type of issue a subclass of Task.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Task\r\n */\r\nvar Task = 'http://www.w3.org/2005/01/wf/flow#Task';\r\n/**\r\n * open\r\n *\r\n * A task which needs attention. The very crude states of Open and Closed all\r\n *         interoperability between different systems if the states for a given\r\n *         application are made subclasses of either Open or Closed. This allows\r\n *         tasks from different systems to be mixed and treated together with\r\n *         limited but valuable functionality.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Open\r\n */\r\nvar Open = 'http://www.w3.org/2005/01/wf/flow#Open';\r\n/**\r\n * closed\r\n *\r\n * A task which does not need attention. It may be closed because\r\n *         has been abandoned or completed, for example.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Closed\r\n */\r\nvar Closed = 'http://www.w3.org/2005/01/wf/flow#Closed';\r\n/**\r\n * action item\r\n *\r\n * An obligation taken on by a person, typically at a meeting.\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#ActionItem\r\n */\r\nvar ActionItem = 'http://www.w3.org/2005/01/wf/flow#ActionItem';\r\n/**\r\n * product\r\n *\r\n * A product is a task which monitors something\r\n *                 which must be produced.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Product\r\n */\r\nvar Product = 'http://www.w3.org/2005/01/wf/flow#Product';\r\n/**\r\n * message\r\n *\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Message\r\n */\r\nvar Message = 'http://www.w3.org/2005/01/wf/flow#Message';\r\n/**\r\n * tracker\r\n *\r\n * A set of issues and\r\n *                 the constraints on how they evolve.\r\n *                 To use this ontology, craete a new tracker.\r\n *                 Copy an existing one or make up your own.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Tracker\r\n */\r\nvar Tracker = 'http://www.w3.org/2005/01/wf/flow#Tracker';\r\n/**\r\n * change\r\n *\r\n * The universal class of things which\r\n * change the state of a task.\r\n * Included now: Creation, Transition. (Maybe in the future\r\n * more Ï€-calculus constructions such as splitting & merging tasks,\r\n * and import/export of obligations to a foreign opaque system.)\r\n *\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Change\r\n */\r\nvar Change = 'http://www.w3.org/2005/01/wf/flow#Change';\r\n/**\r\n * transition\r\n *\r\n * A transition is a change of state of\r\n * a task. Typical properties include date and/or source\r\n * (a document causing the transition), and a final state.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Transition\r\n */\r\nvar Transition = 'http://www.w3.org/2005/01/wf/flow#Transition';\r\n/**\r\n * creation\r\n *\r\n * A creation is a change from existence\r\n * to non-existence\r\n * a task. Typical properties include date and/or source\r\n * (a document causing the transition), and a final state.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#Creation\r\n */\r\nvar Creation = 'http://www.w3.org/2005/01/wf/flow#Creation';\r\n/**\r\n * terminal state\r\n *\r\n * A state from which there are no transitions.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#TerminalState\r\n */\r\nvar TerminalState = 'http://www.w3.org/2005/01/wf/flow#TerminalState';\r\n/**\r\n * non-terminal state\r\n *\r\n * A state from which there are transitions.\r\n *\r\n * http://www.w3.org/2005/01/wf/flow#NonTerminalState\r\n */\r\nvar NonTerminalState = 'http://www.w3.org/2005/01/wf/flow#NonTerminalState';\n\nvar wfImport = /*#__PURE__*/Object.freeze({\n\tdescription: description,\n\tdependent: dependent,\n\tassignee: assignee,\n\tmodifiedBy: modifiedBy,\n\tsubscriber: subscriber,\n\tdeliverable: deliverable,\n\tgoalDescription: goalDescription,\n\tsuccessCriteria: successCriteria,\n\tdateDue: dateDue,\n\tattachment: attachment,\n\tscreenShot: screenShot,\n\ttestData: testData,\n\tterminalOutput: terminalOutput,\n\tmessage: message,\n\trecipent: recipent,\n\tsender: sender,\n\ttracker: tracker,\n\tissueClass: issueClass,\n\tissueCategory: issueCategory,\n\tstateStore: stateStore,\n\ttransactionStore: transactionStore,\n\tasigneeClass: asigneeClass,\n\tinitialState: initialState,\n\tfinal: final,\n\ttask: task,\n\trequires: requires,\n\taffects: affects,\n\tcreates: creates,\n\tallowedTransitions: allowedTransitions,\n\tissue: issue,\n\tsource: source,\n\tTask: Task,\n\tOpen: Open,\n\tClosed: Closed,\n\tActionItem: ActionItem,\n\tProduct: Product,\n\tMessage: Message,\n\tTracker: Tracker,\n\tChange: Change,\n\tTransition: Transition,\n\tCreation: Creation,\n\tTerminalState: TerminalState,\n\tNonTerminalState: NonTerminalState\n});\n\nexport { affects as A, creates as B, allowedTransitions as C, issue as D, source as E, Closed as F, ActionItem as G, Tracker as H, Change as I, Transition as J, Creation as K, TerminalState as L, Message as M, NonTerminalState as N, Open as O, Product as P, wfImport as Q, Task as T, dependent as a, assignee as b, deliverable as c, description as d, successCriteria as e, dateDue as f, goalDescription as g, attachment as h, screenShot as i, terminalOutput as j, message as k, sender as l, modifiedBy as m, tracker as n, issueClass as o, issueCategory as p, stateStore as q, recipent as r, subscriber as s, testData as t, transactionStore as u, asigneeClass as v, initialState as w, final as x, task as y, requires as z };\n"]},"metadata":{},"sourceType":"module"}